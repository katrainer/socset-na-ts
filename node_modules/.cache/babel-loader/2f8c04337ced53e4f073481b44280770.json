{"ast":null,"code":"var _jsxFileName = \"D:\\\\It-inkubator\\\\socset-na-ts\\\\src\\\\components\\\\Profile\\\\ProfileInfo\\\\ProfileInfo.tsx\";\nimport React from 'react';\nimport { ProfileStatus } from './ProfileStatus/ProfileStatus';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updatePhotosTC } from '../../../redux/reducer/profilePageReducer';\nimport s from './ProfileInfo.module.css';\nexport const ProfileInfo = React.memo(_ref => {\n  var _profileUserData$phot;\n\n  let {\n    profileUserData,\n    status,\n    updateStatusTC\n  } = _ref;\n  const dispatch = useDispatch();\n  const ownerPage = useSelector(state => {\n    var _state$profile$userPr;\n\n    return (_state$profile$userPr = state.profile.userProfilePage) === null || _state$profile$userPr === void 0 ? void 0 : _state$profile$userPr.userId;\n  });\n  const owner = useSelector(state => state.login.id);\n\n  const savePhotoHandler = e => {\n    if (e.target.files) {\n      dispatch(updatePhotosTC(e.target.files[0]));\n    }\n\n    return;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.mainContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.profileImgContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: ((_profileUserData$phot = profileUserData.photos) === null || _profileUserData$phot === void 0 ? void 0 : _profileUserData$phot.small) ? profileUserData.photos.large : 'https://i.pinimg.com/736x/75/24/87/752487a0b94808fe215c2dbf3f3f18b7.jpg',\n    alt: \"\\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0442\\u043E\\u0433\\u043E, \\u0447\\u0435\\u0433\\u043E \\u043D\\u0435\\u0442\\u0443\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.nameContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, profileUserData.fullName), /*#__PURE__*/React.createElement(ProfileStatus, {\n    value: status,\n    updateStatusTC: updateStatusTC,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }), ownerPage === owner && /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: savePhotoHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 45\n    }\n  }, \"dsd\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"dsad\"));\n});","map":{"version":3,"sources":["D:/It-inkubator/socset-na-ts/src/components/Profile/ProfileInfo/ProfileInfo.tsx"],"names":["React","ProfileStatus","useDispatch","useSelector","updatePhotosTC","s","ProfileInfo","memo","profileUserData","status","updateStatusTC","dispatch","ownerPage","state","profile","userProfilePage","userId","owner","login","id","savePhotoHandler","e","target","files","mainContainer","profileImgContainer","photos","small","large","nameContainer","fullName"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,SAAQC,aAAR,QAA4B,+BAA5B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AAGA,SAAQC,cAAR,QAA6B,2CAA7B;AACA,OAAOC,CAAP,MAAc,0BAAd;AAQA,OAAO,MAAMC,WAAgC,GAAGN,KAAK,CAACO,IAAN,CAAW,QAKjD;AAAA;;AAAA,MAJN;AACIC,IAAAA,eADJ;AAEIC,IAAAA,MAFJ;AAGIC,IAAAA;AAHJ,GAIM;AACN,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAMU,SAAS,GAAGT,WAAW,CAAuCU,KAAK;AAAA;;AAAA,oCAAIA,KAAK,CAACC,OAAN,CAAcC,eAAlB,0DAAI,sBAA+BC,MAAnC;AAAA,GAA5C,CAA7B;AACA,QAAMC,KAAK,GAAGd,WAAW,CAA2BU,KAAK,IAAIA,KAAK,CAACK,KAAN,CAAYC,EAAhD,CAAzB;;AACA,QAAMC,gBAAgB,GAAIC,CAAD,IAAsC;AAC3D,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAb,EAAoB;AAChBZ,MAAAA,QAAQ,CAACP,cAAc,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAf,CAAR;AACH;;AACD;AACH,GALD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAElB,CAAC,CAACmB,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEnB,CAAC,CAACoB,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,GAAG,EAAE,0BAAAjB,eAAe,CAACkB,MAAhB,gFAAwBC,KAAxB,IAAgCnB,eAAe,CAACkB,MAAhB,CAAuBE,KAAvD,GAA+D,yEADxE;AAEI,IAAA,GAAG,EAAC,gJAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAII;AAAK,IAAA,SAAS,EAAEvB,CAAC,CAACwB,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIrB,eAAe,CAACsB,QAApB,CADJ,eAEI,oBAAC,aAAD;AACI,IAAA,KAAK,EAAErB,MADX;AAEI,IAAA,cAAc,EAAEC,cAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAKKE,SAAS,KAAKK,KAAd,iBAAuB;AACpB,IAAA,IAAI,EAAC,MADe;AAEpB,IAAA,QAAQ,EAAEG,gBAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAL5B,CAJJ,CADJ,eAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ,CADJ;AAqBH,CArC+C,CAAzC","sourcesContent":["import React, {ChangeEvent} from 'react';\r\nimport {ProfileStatus} from './ProfileStatus/ProfileStatus';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../redux/store';\r\nimport {ProfileDataType} from '../../../api/profileApi';\r\nimport {updatePhotosTC} from '../../../redux/reducer/profilePageReducer';\r\nimport s from './ProfileInfo.module.css'\r\n\r\n\r\ntype PropsType = {\r\n    profileUserData: ProfileDataType\r\n    status: string\r\n    updateStatusTC: (status: string) => void\r\n}\r\nexport const ProfileInfo: React.FC<PropsType> = React.memo((\r\n    {\r\n        profileUserData,\r\n        status,\r\n        updateStatusTC,\r\n    }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const ownerPage = useSelector<AppRootStateType, number | undefined>(state => state.profile.userProfilePage?.userId)\r\n    const owner = useSelector<AppRootStateType, number>(state => state.login.id)\r\n    const savePhotoHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files) {\r\n            dispatch(updatePhotosTC(e.target.files[0]))\r\n        }\r\n        return\r\n    }\r\n    return (\r\n        <div className={s.mainContainer}>\r\n            <div className={s.profileImgContainer}>\r\n                <img\r\n                    src={profileUserData.photos?.small ? profileUserData.photos.large : 'https://i.pinimg.com/736x/75/24/87/752487a0b94808fe215c2dbf3f3f18b7.jpg'}\r\n                    alt=\"изображение того, чего нету\"/>\r\n                <div className={s.nameContainer}>\r\n                    <p>{profileUserData.fullName}</p>\r\n                    <ProfileStatus\r\n                        value={status}\r\n                        updateStatusTC={updateStatusTC}/>\r\n                    {ownerPage === owner && <input\r\n                        type=\"file\"\r\n                        onChange={savePhotoHandler}>dsd</input>}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                dsad\r\n            </div>\r\n        </div>\r\n    )\r\n})"]},"metadata":{},"sourceType":"module"}