{"ast":null,"code":"var _jsxFileName = \"D:\\\\It-inkubator\\\\socset-na-ts\\\\src\\\\hoc\\\\withAuthRedirect.tsx\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst mstp = state => {\n  return {\n    isAuth: state.authReducer.isAuth\n  };\n};\n\nexport function WithAuthRedirect(Component) {\n  const RedirectComponent = props => {\n    const {\n      isAuth,\n      ...restProps\n    } = props;\n    if (!isAuth) return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 29\n      }\n    });\n    return /*#__PURE__*/React.createElement(Component, Object.assign({}, restProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 16\n      }\n    }));\n  };\n\n  const connectRedirectComponent = connect(mstp)(RedirectComponent);\n  return connectRedirectComponent;\n}","map":{"version":3,"sources":["D:/It-inkubator/socset-na-ts/src/hoc/withAuthRedirect.tsx"],"names":["React","Redirect","connect","mstp","state","isAuth","authReducer","WithAuthRedirect","Component","RedirectComponent","props","restProps","connectRedirectComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAMA,MAAMC,IAAI,GAAIC,KAAD,IAAmC;AAC5C,SAAO;AACHC,IAAAA,MAAM,EAAED,KAAK,CAACE,WAAN,CAAkBD;AADvB,GAAP;AAGH,CAJD;;AAMA,OAAO,SAASE,gBAAT,CAA6BC,SAA7B,EAAgE;AACnE,QAAMC,iBAAiB,GAAIC,KAAD,IAAqB;AAC3C,UAAM;AAACL,MAAAA,MAAD;AAAS,SAAGM;AAAZ,QAAyBD,KAA/B;AACA,QAAI,CAACL,MAAL,EAAa,oBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACb,wBAAO,oBAAC,SAAD,oBAAeM,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACH,GAJD;;AAKA,QAAMC,wBAAwB,GAAGV,OAAO,CAACC,IAAD,CAAP,CAAcM,iBAAd,CAAjC;AACA,SAAOG,wBAAP;AACH","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/store\";\r\n\r\ntype mstpType = {\r\n    isAuth: boolean\r\n}\r\nconst mstp = (state: AppStateType): mstpType => {\r\n    return {\r\n        isAuth: state.authReducer.isAuth,\r\n    }\r\n}\r\n\r\nexport function WithAuthRedirect<T>(Component: React.ComponentType<T>) {\r\n    const RedirectComponent = (props: mstpType) => {\r\n        const {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to='/login'/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n    const connectRedirectComponent = connect(mstp)(RedirectComponent)\r\n    return connectRedirectComponent\r\n}"]},"metadata":{},"sourceType":"module"}