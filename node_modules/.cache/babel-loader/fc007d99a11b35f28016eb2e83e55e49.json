{"ast":null,"code":"import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { messagesPageReducer } from './reducer/messagesPageReducer';\nimport { profilePageReducer } from './reducer/profilePageReducer';\nimport { sidebarPageReducer } from './reducer/sidebarPageReducer';\nimport { usersPageReducer } from './reducer/usersPageReducer';\nimport { authReducer } from './reducer/authReducer';\nimport thunk from 'redux-thunk';\nimport { commonReducer } from '../common/commonReducer';\nexport const rootReducer = combineReducers({\n  messages: messagesPageReducer,\n  profile: profilePageReducer,\n  sidebar: sidebarPageReducer,\n  userPage: usersPageReducer,\n  login: authReducer,\n  common: commonReducer\n});\nexport const store = createStore(rootReducer, applyMiddleware(thunk));","map":{"version":3,"sources":["D:/It-inkubator/socset-na-ts/src/redux/store.ts"],"names":["applyMiddleware","combineReducers","createStore","messagesPageReducer","profilePageReducer","sidebarPageReducer","usersPageReducer","authReducer","thunk","commonReducer","rootReducer","messages","profile","sidebar","userPage","login","common","store"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,eAAzB,EAA0CC,WAA1C,QAA4D,OAA5D;AACA,SAA2BC,mBAA3B,QAAqD,+BAArD;AACA,SAA2BC,kBAA3B,QAAoD,8BAApD;AACA,SAAQC,kBAAR,QAAiC,8BAAjC;AACA,SAA4BC,gBAA5B,QAAmD,4BAAnD;AACA,SAAQC,WAAR,QAA2C,uBAA3C;AACA,OAAOC,KAAP,MAAiC,aAAjC;AACA,SAA0BC,aAA1B,QAA8C,yBAA9C;AAIA,OAAO,MAAMC,WAAW,GAAGT,eAAe,CAAC;AACvCU,EAAAA,QAAQ,EAAER,mBAD6B;AAEvCS,EAAAA,OAAO,EAAER,kBAF8B;AAGvCS,EAAAA,OAAO,EAAER,kBAH8B;AAIvCS,EAAAA,QAAQ,EAAER,gBAJ6B;AAKvCS,EAAAA,KAAK,EAAER,WALgC;AAMvCS,EAAAA,MAAM,EAAEP;AAN+B,CAAD,CAAnC;AAQP,OAAO,MAAMQ,KAAK,GAAGf,WAAW,CAACQ,WAAD,EAAcV,eAAe,CAACQ,KAAD,CAA7B,CAAzB","sourcesContent":["import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {MessageActionType, messagesPageReducer} from './reducer/messagesPageReducer';\r\nimport {ProfileActionType, profilePageReducer} from './reducer/profilePageReducer';\r\nimport {sidebarPageReducer} from './reducer/sidebarPageReducer';\r\nimport {UserPageActionType, usersPageReducer} from './reducer/usersPageReducer';\r\nimport {authReducer, LoginActionType} from './reducer/authReducer';\r\nimport thunk, {ThunkAction} from 'redux-thunk';\r\nimport {CommonActionType, commonReducer} from '../common/commonReducer';\r\nimport {AppReducerActionType} from './reducer/appReducer';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    messages: messagesPageReducer,\r\n    profile: profilePageReducer,\r\n    sidebar: sidebarPageReducer,\r\n    userPage: usersPageReducer,\r\n    login: authReducer,\r\n    common: commonReducer,\r\n})\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport type AppActionType =\r\n    | MessageActionType\r\n    | ProfileActionType\r\n    | CommonActionType\r\n    | LoginActionType\r\n    | UserPageActionType\r\n    | AppReducerActionType\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AppActionType>"]},"metadata":{},"sourceType":"module"}