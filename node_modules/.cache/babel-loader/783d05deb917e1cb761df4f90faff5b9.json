{"ast":null,"code":"var _jsxFileName = \"D:\\\\It-inkubator\\\\socset-na-ts\\\\src\\\\components\\\\Login\\\\LoginFormik.tsx\";\nimport React from \"react\";\nimport { ThunkLogIn } from \"../../redux/reducer/authReducer\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\n\nconst LoginFormik = _ref => {\n  let {\n    ThunkLogIn,\n    isAuth\n  } = _ref;\n  if (isAuth) return /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 24\n    }\n  });\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: values => {\n      console.log(values);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"LOGIN\"));\n}; //----------------------------------------connect\n\n\nconst pstp = state => {\n  return {\n    isAuth: state.authReducer.isAuth\n  };\n};\n\nexport default connect(pstp, {\n  ThunkLogIn\n})(LoginFormik);","map":{"version":3,"sources":["D:/It-inkubator/socset-na-ts/src/components/Login/LoginFormik.tsx"],"names":["React","ThunkLogIn","connect","Redirect","useFormik","LoginFormik","isAuth","formik","initialValues","email","password","onSubmit","values","console","log","pstp","state","authReducer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,UAAR,QAAyB,iCAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AAEA,SAAQC,SAAR,QAAwB,QAAxB;;AAOA,MAAMC,WAAgC,GAAG,QAA0B;AAAA,MAAzB;AAACJ,IAAAA,UAAD;AAAaK,IAAAA;AAAb,GAAyB;AAC/D,MAAIA,MAAJ,EAAY,oBAAO,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACZ,QAAMC,MAAM,GAAGH,SAAS,CAAC;AACrBI,IAAAA,aAAa,EAAE;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KADM;AAKrBC,IAAAA,QAAQ,EAAEC,MAAM,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH;AAPoB,GAAD,CAAxB;AASA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADG,CAAP;AAGH,CAdD,C,CAiBA;;;AACA,MAAMG,IAAI,GAAIC,KAAD,IAAyB;AAClC,SAAO;AACHV,IAAAA,MAAM,EAAEU,KAAK,CAACC,WAAN,CAAkBX;AADvB,GAAP;AAGH,CAJD;;AAKA,eAAeJ,OAAO,CAACa,IAAD,EAAO;AAACd,EAAAA;AAAD,CAAP,CAAP,CAA4BI,WAA5B,CAAf","sourcesContent":["import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form'\r\nimport {ThunkLogIn} from \"../../redux/reducer/authReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../../redux/storeRedux\";\r\nimport {useFormik} from \"formik\";\r\n\r\n\r\ntype LoginType = {\r\n    ThunkLogIn: (email: string, password: string, rememberMe: boolean) => void\r\n    isAuth: boolean\r\n}\r\nconst LoginFormik: React.FC<LoginType> = ({ThunkLogIn, isAuth}) => {\r\n    if (isAuth) return <Redirect to='/profile'/>\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: ''\r\n        },\r\n        onSubmit: values => {\r\n            console.log(values)\r\n        },\r\n    })\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n    </div>\r\n}\r\n\r\n\r\n//----------------------------------------connect\r\nconst pstp = (state: AppStateType) => {\r\n    return {\r\n        isAuth: state.authReducer.isAuth\r\n    }\r\n}\r\nexport default connect(pstp, {ThunkLogIn})(LoginFormik)\r\n"]},"metadata":{},"sourceType":"module"}