{"ast":null,"code":"import { usersAPI } from \"../../API\";\nimport { changePreloaderAC, enumCommonActionType } from \"../../common/commonReducer\";\nexport let enumUsersPageActionType;\n\n(function (enumUsersPageActionType) {\n  enumUsersPageActionType[\"subscribe\"] = \"USERSPAGE/SUBSCRIBE\";\n  enumUsersPageActionType[\"unSubscribe\"] = \"USERSPAGE/UNSUBSCRIBE\";\n  enumUsersPageActionType[\"setUsers\"] = \"USERSPAGE/SET-USERS\";\n  enumUsersPageActionType[\"setTotalUsersCount\"] = \"USERSPAGE/SET-TOTAL-USERS-COUNT\";\n  enumUsersPageActionType[\"changeCurrentPage\"] = \"USERSPAGE/CHANGE-CURRENT-PAGE\";\n  enumUsersPageActionType[\"toggleFollowingInProgress\"] = \"USERSPAGE/TOGGLE-FOLLOWING-IN-PROGRESS\";\n})(enumUsersPageActionType || (enumUsersPageActionType = {}));\n\nconst initialState = {\n  users: [],\n  pageSize: 20,\n  totalUsersCount: 0,\n  currentPage: 1,\n  preloader: false,\n  followingInProgress: []\n};\nexport const usersPageReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case enumUsersPageActionType.subscribe:\n      return { ...state,\n        users: state.users.map(t => t.id === action.payload.id ? { ...t,\n          followed: true\n        } : { ...t\n        })\n      };\n\n    case enumUsersPageActionType.unSubscribe:\n      return { ...state,\n        users: state.users.map(t => t.id === action.payload.id ? { ...t,\n          followed: false\n        } : { ...t\n        })\n      };\n\n    case enumUsersPageActionType.setUsers:\n      return { ...state,\n        ...action.payload\n      };\n\n    case enumUsersPageActionType.setTotalUsersCount:\n      return { ...state,\n        ...action.payload\n      };\n\n    case enumUsersPageActionType.changeCurrentPage:\n      return { ...state,\n        ...action.payload\n      };\n\n    case enumCommonActionType.changePreloader:\n      return { ...state,\n        ...action.payload\n      };\n\n    case enumUsersPageActionType.toggleFollowingInProgress:\n      return { ...state,\n        followingInProgress: action.payload.isFetching ? [...state.followingInProgress, action.payload.userId] : state.followingInProgress.filter(t => t !== action.payload.userId)\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}; //action\n\nexport const subscribeAC = id => {\n  return {\n    type: enumUsersPageActionType.subscribe,\n    payload: {\n      id\n    }\n  };\n};\nexport const unSubscribeAC = id => {\n  return {\n    type: enumUsersPageActionType.unSubscribe,\n    payload: {\n      id\n    }\n  };\n};\nexport const setUsersAC = users => {\n  return {\n    type: enumUsersPageActionType.setUsers,\n    payload: {\n      users\n    }\n  };\n};\nexport const setTotalUsersCountAC = totalUsersCount => {\n  return {\n    type: enumUsersPageActionType.setTotalUsersCount,\n    payload: {\n      totalUsersCount\n    }\n  };\n};\nexport const changeCurrentPageAC = currentPage => {\n  return {\n    type: enumUsersPageActionType.changeCurrentPage,\n    payload: {\n      currentPage\n    }\n  };\n};\nexport const toggleFollowingInProgressAC = (isFetching, userId) => {\n  return {\n    type: enumUsersPageActionType.toggleFollowingInProgress,\n    payload: {\n      isFetching,\n      userId\n    }\n  };\n}; //thunk\n\nexport const setUsersTC = (currentPage, pageSize) => async dispatch => {\n  dispatch(changePreloaderAC(true));\n  {\n    const res = await usersAPI.setUsers(currentPage, pageSize);\n    dispatch(setUsersAC(res.data.items));\n  }\n  {\n    const res = await usersAPI.setTotalUsersCount();\n    dispatch(setTotalUsersCountAC(data.totalCount));\n  }\n  dispatch(changePreloaderAC(false));\n};\nexport const changeCurrentPageTC = (currentPage, pageSize) => dispatch => {\n  dispatch(changePreloaderAC(true));\n  dispatch(changeCurrentPageAC(currentPage));\n  usersAPI.changeCurrentPage(currentPage, pageSize).then(data => {\n    dispatch(setUsersAC(data.items));\n    dispatch(changePreloaderAC(false));\n  });\n};\nexport const unSubscribeTC = id => async dispatch => {\n  dispatch(toggleFollowingInProgressAC(true, id));\n  const res = await usersAPI.unSubscribeAPI(id);\n  if (res.data.resultCode === 0) dispatch(unSubscribeAC(id));\n  dispatch(toggleFollowingInProgressAC(false, id));\n};\nexport const subscribeTC = id => async dispatch => {\n  dispatch(toggleFollowingInProgressAC(true, id));\n  const res = await usersAPI.subscribe(id);\n  if (res.data.resultCode === 0) dispatch(subscribeAC(id));\n  dispatch(toggleFollowingInProgressAC(false, id));\n}; //type","map":{"version":3,"sources":["D:/It-inkubator/socset-na-ts/src/redux/reducer/usersPageReducer.ts"],"names":["usersAPI","changePreloaderAC","enumCommonActionType","enumUsersPageActionType","initialState","users","pageSize","totalUsersCount","currentPage","preloader","followingInProgress","usersPageReducer","state","action","type","subscribe","map","t","id","payload","followed","unSubscribe","setUsers","setTotalUsersCount","changeCurrentPage","changePreloader","toggleFollowingInProgress","isFetching","userId","filter","subscribeAC","unSubscribeAC","setUsersAC","setTotalUsersCountAC","changeCurrentPageAC","toggleFollowingInProgressAC","setUsersTC","dispatch","res","data","items","totalCount","changeCurrentPageTC","then","unSubscribeTC","unSubscribeAPI","resultCode","subscribeTC"],"mappings":"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","sourcesContent":["import {usersAPI, UserType} from \"../../API\";\r\nimport {AppThunk} from \"../store\";\r\nimport {changePreloaderAC, enumCommonActionType, preloaderACType} from \"../../common/commonReducer\";\r\n\r\nexport enum enumUsersPageActionType {\r\n    subscribe = 'USERSPAGE/SUBSCRIBE',\r\n    unSubscribe = 'USERSPAGE/UNSUBSCRIBE',\r\n    setUsers = 'USERSPAGE/SET-USERS',\r\n    setTotalUsersCount = 'USERSPAGE/SET-TOTAL-USERS-COUNT',\r\n    changeCurrentPage = 'USERSPAGE/CHANGE-CURRENT-PAGE',\r\n    toggleFollowingInProgress = 'USERSPAGE/TOGGLE-FOLLOWING-IN-PROGRESS',\r\n}\r\n\r\nconst initialState: UsersType = {\r\n    users: [],\r\n    pageSize: 20,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    preloader: false,\r\n    followingInProgress: [],\r\n}\r\n\r\nexport const usersPageReducer = (state: UsersType = initialState, action: UserPageActionType): UsersType => {\r\n    switch (action.type) {\r\n        case enumUsersPageActionType.subscribe:\r\n            return {\r\n                ...state, users: state.users.map(t => t.id === action.payload.id\r\n                    ? {...t, followed: true} : {...t})\r\n            }\r\n        case enumUsersPageActionType.unSubscribe:\r\n            return {\r\n                ...state, users: state.users.map(t => t.id === action.payload.id\r\n                    ? {...t, followed: false} : {...t})\r\n            }\r\n        case enumUsersPageActionType.setUsers:\r\n            return {...state, ...action.payload}\r\n        case enumUsersPageActionType.setTotalUsersCount:\r\n            return {...state, ...action.payload}\r\n        case enumUsersPageActionType.changeCurrentPage:\r\n            return {...state, ...action.payload}\r\n        case enumCommonActionType.changePreloader:\r\n            return {...state, ...action.payload}\r\n        case enumUsersPageActionType.toggleFollowingInProgress:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.payload.isFetching ?\r\n                    [...state.followingInProgress, action.payload.userId]\r\n                    : state.followingInProgress.filter(t =>\r\n                        t !== action.payload.userId)\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n//action\r\nexport const subscribeAC = (id: string) => {\r\n    return {\r\n        type: enumUsersPageActionType.subscribe, payload: {id},\r\n    } as const\r\n}\r\nexport const unSubscribeAC = (id: string) => {\r\n    return {\r\n        type: enumUsersPageActionType.unSubscribe, payload: {id},\r\n    } as const\r\n}\r\nexport const setUsersAC = (users: Array<UserType>) => {\r\n    return {\r\n        type: enumUsersPageActionType.setUsers, payload: {users}\r\n    } as const\r\n}\r\nexport const setTotalUsersCountAC = (totalUsersCount: number) => {\r\n    return {\r\n        type: enumUsersPageActionType.setTotalUsersCount, payload: {totalUsersCount},\r\n    } as const\r\n}\r\nexport const changeCurrentPageAC = (currentPage: number) => {\r\n    return {\r\n        type: enumUsersPageActionType.changeCurrentPage, payload: {currentPage}\r\n    } as const\r\n}\r\nexport const toggleFollowingInProgressAC = (isFetching: boolean, userId: string) => {\r\n    return {\r\n        type: enumUsersPageActionType.toggleFollowingInProgress, payload: {\r\n            isFetching,\r\n            userId\r\n        }\r\n    } as const\r\n}\r\n\r\n//thunk\r\nexport const setUsersTC = (currentPage: number, pageSize: number): AppThunk =>\r\n    async (dispatch) => {\r\n        dispatch(changePreloaderAC(true))\r\n        {\r\n            const res = await usersAPI.setUsers(currentPage, pageSize)\r\n            dispatch(setUsersAC(res.data.items))\r\n        }\r\n\r\n        {\r\n            const res = await usersAPI.setTotalUsersCount()\r\n            dispatch(setTotalUsersCountAC(data.totalCount))\r\n        }\r\n        dispatch(changePreloaderAC(false))\r\n    }\r\nexport const changeCurrentPageTC =\r\n    (currentPage: number, pageSize: number): AppThunk =>\r\n        dispatch => {\r\n            dispatch(changePreloaderAC(true))\r\n            dispatch(changeCurrentPageAC(currentPage))\r\n            usersAPI.changeCurrentPage(currentPage, pageSize).then(data => {\r\n                dispatch(setUsersAC(data.items))\r\n                dispatch(changePreloaderAC(false))\r\n            })\r\n        }\r\nexport const unSubscribeTC = (id: string): AppThunk => async (dispatch) => {\r\n    dispatch(toggleFollowingInProgressAC(true, id))\r\n    const res = await usersAPI.unSubscribeAPI(id)\r\n    if (res.data.resultCode === 0) dispatch(unSubscribeAC(id))\r\n    dispatch(toggleFollowingInProgressAC(false, id))\r\n}\r\nexport const subscribeTC = (id: string): AppThunk => async (dispatch) => {\r\n    dispatch(toggleFollowingInProgressAC(true, id))\r\n    const res = await usersAPI.subscribe(id)\r\n    if (res.data.resultCode === 0) dispatch(subscribeAC(id))\r\n    dispatch(toggleFollowingInProgressAC(false, id))\r\n}\r\n\r\n//type\r\nexport type UsersType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    preloader: boolean\r\n    followingInProgress: Array<null | string>\r\n}\r\nexport type UserPageActionType = ReturnType<typeof subscribeAC>\r\n    | ReturnType<typeof unSubscribeAC>\r\n    | ReturnType<typeof setUsersAC>\r\n    | ReturnType<typeof setTotalUsersCountAC>\r\n    | ReturnType<typeof changeCurrentPageAC>\r\n    | preloaderACType\r\n    | ReturnType<typeof toggleFollowingInProgressAC>"]},"metadata":{},"sourceType":"module"}