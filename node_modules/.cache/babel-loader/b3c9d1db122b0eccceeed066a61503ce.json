{"ast":null,"code":"var _jsxFileName = \"D:\\\\It-inkubator\\\\socset-na-ts\\\\src\\\\components\\\\Profile\\\\ProfileConteiner.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Profile } from \"./Profile\";\nimport { Preloader } from \"../../common/Preloader\";\nimport { thunkGETStatus, thunkSetProfileUserData, thunkUpdateStatus } from \"../../redux/reducer/profilePageReducer\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { WithAuthRedirect } from \"../../hoc/withAuthRedirect\";\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    this.props.thunkSetProfileUserData(this.props);\n    this.props.thunkGETStatus(this.props);\n  }\n\n  render() {\n    // if (!this.props.isAuth) return <Redirect to='/login'/>\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.preloader && /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(Profile, {\n      profileUserData: this.props.userProfilePage,\n      status: this.props.status,\n      thunkUpdateStatus: this.props.thunkUpdateStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }), \";\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    preloader: state.usersPageReducer.preloader,\n    userProfilePage: state.profilePageReducer.userProfilePage,\n    status: state.profilePageReducer.status\n  };\n}; // export default withRouter(connect(mapStateToProps,\n//     {thunkSetProfileUserData})(ProfileContainer))\n\n\nexport default compose(connect(mapStateToProps, {\n  thunkSetProfileUserData,\n  thunkGETStatus,\n  thunkUpdateStatus\n}), withRouter, WithAuthRedirect)(ProfileContainer);","map":{"version":3,"sources":["D:/It-inkubator/socset-na-ts/src/components/Profile/ProfileConteiner.tsx"],"names":["React","connect","Profile","Preloader","thunkGETStatus","thunkSetProfileUserData","thunkUpdateStatus","withRouter","compose","WithAuthRedirect","ProfileContainer","Component","componentDidMount","props","render","preloader","userProfilePage","status","mapStateToProps","state","usersPageReducer","profilePageReducer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAAQC,SAAR,QAAwB,wBAAxB;AAEA,SACIC,cADJ,EAEIC,uBAFJ,EAGIC,iBAHJ,QAKO,wCALP;AAMA,SAA6BC,UAA7B,QAA8C,kBAA9C;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,gBAAR,QAA+B,4BAA/B;;AAEA,MAAMC,gBAAN,SAA+BV,KAAK,CAACW,SAArC,CAA0D;AACtDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWR,uBAAX,CAAmC,KAAKQ,KAAxC;AACA,SAAKA,KAAL,CAAWT,cAAX,CAA0B,KAAKS,KAA/B;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL;AACA,wBAAO,0CACF,KAAKD,KAAL,CAAWE,SAAX,iBAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADtB,eAEH,oBAAC,OAAD;AACI,MAAA,eAAe,EAAE,KAAKF,KAAL,CAAWG,eADhC;AAEI,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAWI,MAFvB;AAGI,MAAA,iBAAiB,EAAE,KAAKJ,KAAL,CAAWP,iBAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,MAAP;AAOH;;AAfqD;;AAkC1D,MAAMY,eAAe,GAAIC,KAAD,IAAyB;AAC7C,SAAO;AACHJ,IAAAA,SAAS,EAAEI,KAAK,CAACC,gBAAN,CAAuBL,SAD/B;AAEHC,IAAAA,eAAe,EAAEG,KAAK,CAACE,kBAAN,CAAyBL,eAFvC;AAGHC,IAAAA,MAAM,EAAEE,KAAK,CAACE,kBAAN,CAAyBJ;AAH9B,GAAP;AAKH,CAND,C,CAOA;AACA;;;AAEA,eAAeT,OAAO,CAClBP,OAAO,CAACiB,eAAD,EACH;AAACb,EAAAA,uBAAD;AAA0BD,EAAAA,cAA1B;AACIE,EAAAA;AADJ,CADG,CADW,EAIlBC,UAJkB,EAKlBE,gBALkB,CAAP,CAMbC,gBANa,CAAf","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Profile} from \"./Profile\";\nimport {Preloader} from \"../../common/Preloader\";\nimport {AppStateType} from \"../../redux/storeRedux\";\nimport {\n    thunkGETStatus,\n    thunkSetProfileUserData,\n    thunkUpdateStatus,\n    userProfilePageType\n} from \"../../redux/reducer/profilePageReducer\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport {WithAuthRedirect} from \"../../hoc/withAuthRedirect\";\n\nclass ProfileContainer extends React.Component<PropsType> {\n    componentDidMount() {\n        this.props.thunkSetProfileUserData(this.props)\n        this.props.thunkGETStatus(this.props)\n    }\n\n    render() {\n        // if (!this.props.isAuth) return <Redirect to='/login'/>\n        return <>\n            {this.props.preloader && <Preloader/>}\n            <Profile\n                profileUserData={this.props.userProfilePage}\n                status={this.props.status}\n                thunkUpdateStatus={this.props.thunkUpdateStatus}/>;\n        </>\n    }\n}\n\ntype PathParamsType = {\n    userId: string,\n}\ntype MapStateToPropsType = {\n    preloader: boolean\n    userProfilePage: userProfilePageType | null\n    status: string\n}\ntype MapDispatchToPropsType = {\n    thunkSetProfileUserData: (param: any) => void\n    thunkGETStatus: (param: any) => void\n    thunkUpdateStatus: (status:string)=>void\n}\nexport type ProfilePropsType = MapStateToPropsType & MapDispatchToPropsType\ntype PropsType = RouteComponentProps<PathParamsType> & ProfilePropsType\n\nconst mapStateToProps = (state: AppStateType) => {\n    return {\n        preloader: state.usersPageReducer.preloader,\n        userProfilePage: state.profilePageReducer.userProfilePage,\n        status: state.profilePageReducer.status\n    }\n}\n// export default withRouter(connect(mapStateToProps,\n//     {thunkSetProfileUserData})(ProfileContainer))\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps,\n        {thunkSetProfileUserData, thunkGETStatus,\n            thunkUpdateStatus,}),\n    withRouter,\n    WithAuthRedirect,\n)(ProfileContainer)"]},"metadata":{},"sourceType":"module"}