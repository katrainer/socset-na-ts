{"ast":null,"code":"var _jsxFileName = \"D:\\\\It-inkubator\\\\socset-na-ts\\\\src\\\\components\\\\Profile\\\\ProfileInfo\\\\ProfileInfo.tsx\";\nimport React from 'react';\nimport { ProfileStatus } from './ProfileStatus/ProfileStatus';\nimport { useSelector } from 'react-redux';\nexport const ProfileInfo = React.memo(_ref => {\n  let {\n    profileUserData,\n    status,\n    updateStatusTC\n  } = _ref;\n  const ownerPage = useSelector(state => {\n    var _state$profile$userPr;\n\n    return (_state$profile$userPr = state.profile.userProfilePage) === null || _state$profile$userPr === void 0 ? void 0 : _state$profile$userPr.userId;\n  });\n  const owner = useSelector(state => state.login.id);\n\n  const savePhotoHandler = e => {// if (e.target.files){\n    //     e.target.files[0]\n    // }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: profileUserData.photos.large,\n    alt: \"\\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0442\\u043E\\u0433\\u043E, \\u0447\\u0435\\u0433\\u043E \\u043D\\u0435\\u0442\\u0443\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, profileUserData.fullName), /*#__PURE__*/React.createElement(ProfileStatus, {\n    value: status,\n    updateStatusTC: updateStatusTC,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  })), ownerPage === owner && /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: savePhotoHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }\n  }));\n});","map":{"version":3,"sources":["D:/It-inkubator/socset-na-ts/src/components/Profile/ProfileInfo/ProfileInfo.tsx"],"names":["React","ProfileStatus","useSelector","ProfileInfo","memo","profileUserData","status","updateStatusTC","ownerPage","state","profile","userProfilePage","userId","owner","login","id","savePhotoHandler","e","photos","large","fullName"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,SAAQC,aAAR,QAA4B,+BAA5B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAUA,OAAO,MAAMC,WAAgC,GAAGH,KAAK,CAACI,IAAN,CAAW,QAKjD;AAAA,MAJN;AACIC,IAAAA,eADJ;AAEIC,IAAAA,MAFJ;AAGIC,IAAAA;AAHJ,GAIM;AAEN,QAAMC,SAAS,GAAGN,WAAW,CAAuCO,KAAK;AAAA;;AAAA,oCAAIA,KAAK,CAACC,OAAN,CAAcC,eAAlB,0DAAI,sBAA+BC,MAAnC;AAAA,GAA5C,CAA7B;AACA,QAAMC,KAAK,GAAGX,WAAW,CAA2BO,KAAK,IAAIA,KAAK,CAACK,KAAN,CAAYC,EAAhD,CAAzB;;AACA,QAAMC,gBAAgB,GAAIC,CAAD,IAAsC,CAC3D;AACA;AACA;AACH,GAJD;;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AAAK,IAAA,GAAG,EAAEZ,eAAe,CAACa,MAAhB,CAAuBC,KAAjC;AAAwC,IAAA,GAAG,EAAC,gJAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAId,eAAe,CAACe,QAApB,CALJ,eAMI,oBAAC,aAAD;AACI,IAAA,KAAK,EAAEd,MADX;AAEI,IAAA,cAAc,EAAEC,cAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ,EAWKC,SAAS,KAAKK,KAAd,iBAAuB;AACpB,IAAA,IAAI,EAAC,MADe;AAEpB,IAAA,QAAQ,EAAEG,gBAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAX5B,CADJ;AAiBH,CA/B+C,CAAzC","sourcesContent":["import React, {ChangeEvent} from 'react';\r\nimport {ProfileStatus} from './ProfileStatus/ProfileStatus';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../redux/store';\r\nimport {ProfileDataType} from '../../../api/profileApi';\r\n\r\n\r\ntype PropsType = {\r\n    profileUserData: ProfileDataType\r\n    status: string\r\n    updateStatusTC: (status: string) => void\r\n}\r\nexport const ProfileInfo: React.FC<PropsType> = React.memo((\r\n    {\r\n        profileUserData,\r\n        status,\r\n        updateStatusTC,\r\n    }) => {\r\n\r\n    const ownerPage = useSelector<AppRootStateType, number | undefined>(state => state.profile.userProfilePage?.userId)\r\n    const owner = useSelector<AppRootStateType, number>(state => state.login.id)\r\n    const savePhotoHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // if (e.target.files){\r\n        //     e.target.files[0]\r\n        // }\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                {/*<img src={*/}\r\n                {/*    profileUserData.photos.large ? profileUserData.photos.large : 'https://i.pinimg.com/736x/75/24/87/752487a0b94808fe215c2dbf3f3f18b7.jpg'*/}\r\n                {/*} alt=\"изображение того, чего нету\"/>*/}\r\n                <img src={profileUserData.photos.large} alt=\"изображение того, чего нету\"/>\r\n                <p>{profileUserData.fullName}</p>\r\n                <ProfileStatus\r\n                    value={status}\r\n                    updateStatusTC={updateStatusTC}/>\r\n            </div>\r\n            {ownerPage === owner && <input\r\n                type=\"file\"\r\n                onChange={savePhotoHandler}/>}\r\n        </div>\r\n    )\r\n})"]},"metadata":{},"sourceType":"module"}