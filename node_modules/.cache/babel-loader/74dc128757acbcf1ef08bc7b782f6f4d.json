{"ast":null,"code":"import { setAuthDataTC } from './authReducer';\nvar EnumAppActionType;\n\n(function (EnumAppActionType) {\n  EnumAppActionType[\"initializedSuccess\"] = \"APP/INITIALIZED-SUCCESS\";\n})(EnumAppActionType || (EnumAppActionType = {}));\n\nconst initialState = {\n  initialized: false\n};\nexport const AppReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case EnumAppActionType.initializedSuccess:\n      return { ...state,\n        initialized: true\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}; //Action\n\nexport const initializedSuccess = () => {\n  return {\n    type: EnumAppActionType.initializedSuccess\n  };\n}; //thunk\n\nexport const initializeAPP = () => async dispatch => {\n  await dispatch(setAuthDataTC());\n  dispatch(initializedSuccess());\n};","map":{"version":3,"sources":["D:/It-inkubator/socset-na-ts/src/redux/reducer/appReducer.ts"],"names":["setAuthDataTC","EnumAppActionType","initialState","initialized","AppReducer","state","action","type","initializedSuccess","initializeAPP","dispatch"],"mappings":"AACA,SAAQA,aAAR,QAA4B,eAA5B;IAEKC,iB;;WAAAA,iB;AAAAA,EAAAA,iB;GAAAA,iB,KAAAA,iB;;AAIL,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE;AADI,CAArB;AAKA,OAAO,MAAMC,UAAU,GAAG,YAA0E;AAAA,MAAzEC,KAAyE,uEAA/CH,YAA+C;AAAA,MAAjCI,MAAiC;;AAChG,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,iBAAiB,CAACO,kBAAvB;AACI,aAAO,EAAC,GAAGH,KAAJ;AAAWF,QAAAA,WAAW,EAAE;AAAxB,OAAP;;AACJ;AACI,aAAO,EAAC,GAAGE;AAAJ,OAAP;AAJR;AAMH,CAPM,C,CASP;;AACA,OAAO,MAAMG,kBAAkB,GAAG,MAAM;AACpC,SAAO;AAACD,IAAAA,IAAI,EAAEN,iBAAiB,CAACO;AAAzB,GAAP;AACH,CAFM,C,CAIP;;AACA,OAAO,MAAMC,aAAa,GAAG,MAAgB,MAAOC,QAAP,IAAoB;AAC7D,QAAMA,QAAQ,CAACV,aAAa,EAAd,CAAd;AACAU,EAAAA,QAAQ,CAACF,kBAAkB,EAAnB,CAAR;AACH,CAHM","sourcesContent":["import {AppThunk} from '../store';\r\nimport {setAuthDataTC} from './authReducer';\r\n\r\nenum EnumAppActionType {\r\n    initializedSuccess = 'APP/INITIALIZED-SUCCESS'\r\n}\r\n\r\nconst initialState = {\r\n    initialized: false\r\n}\r\n\r\n\r\nexport const AppReducer = (state: InitialStateType = initialState, action: AppReducerActionType) => {\r\n    switch (action.type) {\r\n        case EnumAppActionType.initializedSuccess:\r\n            return {...state, initialized: true}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n//Action\r\nexport const initializedSuccess = () => {\r\n    return {type: EnumAppActionType.initializedSuccess}\r\n}\r\n\r\n//thunk\r\nexport const initializeAPP = (): AppThunk => async (dispatch) => {\r\n    await dispatch(setAuthDataTC())\r\n    dispatch(initializedSuccess())\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\nexport type AppReducerActionType = ReturnType<typeof initializedSuccess>\r\n"]},"metadata":{},"sourceType":"module"}