{"ast":null,"code":"import axios from \"axios\";\nconst instatce = axios.create({\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  headers: {\n    'API-KEY': '9359a22e-adad-4c18-8f69-1475882f26c8'\n  },\n  withCredentials: true\n});\nexport const usersAPI = {\n  unSubscribeAPI(id) {\n    return instatce.delete('follow/' + id).then(response => response.data);\n  },\n\n  subscribe(id) {\n    return instatce.post('follow/' + id).then(response => response.data);\n  },\n\n  setUsers(currentPage, pageSize) {\n    return instatce.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data);\n  },\n\n  setTotalUsersCount() {\n    return instatce.get('users').then(response => response.data);\n  },\n\n  changeCurrentPage(currentPage, pageSize) {\n    return instatce.get(`users?page=${currentPage}\n        &count=${pageSize}`).then(response => response.data);\n  }\n\n};\nexport const profileAPI = {\n  setProfileUserData(userId) {\n    return instatce.get(`profile/` + userId).then(response => response.data);\n  },\n\n  getProfileStatus(userId) {\n    return instatce.get('profile/status/' + userId).then(response => response.data);\n  },\n\n  updateProfileStatus(status) {\n    // debugger\n    return instatce.put('profile/status', {\n      status\n    });\n  }\n\n};\nexport const headerAPI = {\n  setAuthData() {\n    return instatce.get('auth/me').then(response => response.data);\n  }\n\n};\nexport const loginAPI = {\n  setLogin(formData) {\n    return instatce.post('auth/login', {\n      email: formData.email,\n      password: formData.password,\n      rememberMe: formData.rememberMe\n    });\n  }\n\n};","map":{"version":3,"sources":["D:/It-inkubator/socset-na-ts/src/API.ts"],"names":["axios","instatce","create","baseURL","headers","withCredentials","usersAPI","unSubscribeAPI","id","delete","then","response","data","subscribe","post","setUsers","currentPage","pageSize","get","setTotalUsersCount","changeCurrentPage","profileAPI","setProfileUserData","userId","getProfileStatus","updateProfileStatus","status","put","headerAPI","setAuthData","loginAPI","setLogin","formData","email","password","rememberMe"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE,+CADiB;AAE1BC,EAAAA,OAAO,EAAE;AAAC,eAAW;AAAZ,GAFiB;AAG1BC,EAAAA,eAAe,EAAE;AAHS,CAAb,CAAjB;AAMA,OAAO,MAAMC,QAAQ,GAAG;AACpBC,EAAAA,cAAc,CAACC,EAAD,EAAa;AACvB,WAAOP,QAAQ,CAACQ,MAAT,CAAgB,YAAYD,EAA5B,EAAgCE,IAAhC,CAAqCC,QAAQ,IAAIA,QAAQ,CAACC,IAA1D,CAAP;AACH,GAHmB;;AAIpBC,EAAAA,SAAS,CAACL,EAAD,EAAa;AAClB,WAAOP,QAAQ,CAACa,IAAT,CAAc,YAAYN,EAA1B,EAA8BE,IAA9B,CAAmCC,QAAQ,IAAIA,QAAQ,CAACC,IAAxD,CAAP;AACH,GANmB;;AAOpBG,EAAAA,QAAQ,CAACC,WAAD,EAAsBC,QAAtB,EAAwC;AAC5C,WAAOhB,QAAQ,CAACiB,GAAT,CAAc,cAAaF,WAAY,UAASC,QAAS,EAAzD,EAA4DP,IAA5D,CAAiEC,QAAQ,IAAIA,QAAQ,CAACC,IAAtF,CAAP;AACH,GATmB;;AAUpBO,EAAAA,kBAAkB,GAAG;AACjB,WAAOlB,QAAQ,CAACiB,GAAT,CAAa,OAAb,EAAsBR,IAAtB,CAA2BC,QAAQ,IAAIA,QAAQ,CAACC,IAAhD,CAAP;AACH,GAZmB;;AAapBQ,EAAAA,iBAAiB,CAACJ,WAAD,EAAsBC,QAAtB,EAAwC;AACrD,WAAOhB,QAAQ,CAACiB,GAAT,CAAc,cAAaF,WAAY;AACtD,iBAAiBC,QAAS,EADX,EACcP,IADd,CACmBC,QAAQ,IAAIA,QAAQ,CAACC,IADxC,CAAP;AAEH;;AAhBmB,CAAjB;AAmBP,OAAO,MAAMS,UAAU,GAAG;AACtBC,EAAAA,kBAAkB,CAACC,MAAD,EAAiB;AAC/B,WAAOtB,QAAQ,CAACiB,GAAT,CAAc,UAAD,GAAaK,MAA1B,EAAkCb,IAAlC,CAAuCC,QAAQ,IAAIA,QAAQ,CAACC,IAA5D,CAAP;AACH,GAHqB;;AAItBY,EAAAA,gBAAgB,CAACD,MAAD,EAAiB;AAC7B,WAAOtB,QAAQ,CAACiB,GAAT,CAAa,oBAAoBK,MAAjC,EAAyCb,IAAzC,CAA8CC,QAAQ,IAAIA,QAAQ,CAACC,IAAnE,CAAP;AACH,GANqB;;AAOtBa,EAAAA,mBAAmB,CAACC,MAAD,EAAiB;AAChC;AACA,WAAOzB,QAAQ,CAAC0B,GAAT,CAAa,gBAAb,EAA+B;AAACD,MAAAA;AAAD,KAA/B,CAAP;AACH;;AAVqB,CAAnB;AAaP,OAAO,MAAME,SAAS,GAAG;AACrBC,EAAAA,WAAW,GAAG;AACV,WAAO5B,QAAQ,CAACiB,GAAT,CAAa,SAAb,EAAwBR,IAAxB,CAA6BC,QAAQ,IAAIA,QAAQ,CAACC,IAAlD,CAAP;AACH;;AAHoB,CAAlB;AAMP,OAAO,MAAMkB,QAAQ,GAAG;AACpBC,EAAAA,QAAQ,CAACC,QAAD,EAA0B;AAC9B,WAAO/B,QAAQ,CAACa,IAAT,CAAc,YAAd,EAA4B;AAC/BmB,MAAAA,KAAK,EAAED,QAAQ,CAACC,KADe;AAE/BC,MAAAA,QAAQ,EAAEF,QAAQ,CAACE,QAFY;AAG/BC,MAAAA,UAAU,EAAEH,QAAQ,CAACG;AAHU,KAA5B,CAAP;AAKH;;AAPmB,CAAjB","sourcesContent":["import axios from \"axios\";\r\nimport {LoginFormData} from \"./components/Login/Login\";\r\n\r\nconst instatce = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {'API-KEY': '9359a22e-adad-4c18-8f69-1475882f26c8'},\r\n    withCredentials: true\r\n})\r\n\r\nexport const usersAPI = {\r\n    unSubscribeAPI(id: string) {\r\n        return instatce.delete('follow/' + id).then(response => response.data)\r\n    },\r\n    subscribe(id: string) {\r\n        return instatce.post('follow/' + id).then(response => response.data)\r\n    },\r\n    setUsers(currentPage: number, pageSize: number) {\r\n        return instatce.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data)\r\n    },\r\n    setTotalUsersCount() {\r\n        return instatce.get('users').then(response => response.data)\r\n    },\r\n    changeCurrentPage(currentPage: number, pageSize: number) {\r\n        return instatce.get(`users?page=${currentPage}\r\n        &count=${pageSize}`).then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    setProfileUserData(userId: string) {\r\n        return instatce.get(`profile/` + userId).then(response => response.data)\r\n    },\r\n    getProfileStatus(userId: string) {\r\n        return instatce.get('profile/status/' + userId).then(response => response.data)\r\n    },\r\n    updateProfileStatus(status: string) {\r\n        // debugger\r\n        return instatce.put('profile/status', {status})\r\n    }\r\n}\r\n\r\nexport const headerAPI = {\r\n    setAuthData() {\r\n        return instatce.get('auth/me').then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const loginAPI = {\r\n    setLogin(formData: LoginFormData) {\r\n        return instatce.post('auth/login', {\r\n            email: formData.email,\r\n            password: formData.password,\r\n            rememberMe: formData.rememberMe\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}