{"ast":null,"code":"var _jsxFileName = \"D:\\\\It-inkubator\\\\socset-na-ts\\\\src\\\\components\\\\Profile\\\\MyPosts\\\\MyPosts.tsx\";\nimport React from \"react\";\nimport s from \"./MyPost.module.css\";\nimport { Post } from \"./Post/Post\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { renderField, required } from \"../../../reduxForm/renderField\";\nimport { useDispatch } from \"react-redux\";\nimport { useFormik } from \"formik\";\nexport const MyPosts = _ref => {\n  let {\n    postsData,\n    setNewPostClick\n  } = _ref;\n  const dispatch = useDispatch();\n  const posts = postsData.map(p => /*#__PURE__*/React.createElement(Post, {\n    id: p.id,\n    message: p.message,\n    likeCount: p.likeCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 42\n    }\n  }));\n  const formik = useFormik({\n    initialValues: {\n      messages: ''\n    },\n    onSubmit: values => {\n      dispatch(setNewPostClick(values.messages));\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.postBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \"My posts\"), /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, posts));\n};\n\nconst SendMessage = props => {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"message\",\n    component: renderField,\n    placeholder: \"write message\",\n    validate: [required],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"add post\"));\n};\n\nconst ContactForm = reduxForm({\n  form: 'sendMessage'\n})(SendMessage);","map":{"version":3,"sources":["D:/It-inkubator/socset-na-ts/src/components/Profile/MyPosts/MyPosts.tsx"],"names":["React","s","Post","Field","reduxForm","renderField","required","useDispatch","useFormik","MyPosts","postsData","setNewPostClick","dispatch","posts","map","p","id","message","likeCount","formik","initialValues","messages","onSubmit","values","postBlock","SendMessage","props","handleSubmit","ContactForm","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,qBAAd;AAEA,SAAQC,IAAR,QAAmB,aAAnB;AACA,SAAQC,KAAR,EAAkCC,SAAlC,QAAkD,YAAlD;AACA,SAAQC,WAAR,EAAqBC,QAArB,QAAoC,gCAApC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,SAAR,QAAwB,QAAxB;AAIA,OAAO,MAAMC,OAA8B,GACvC,QAGO;AAAA,MAHN;AACIC,IAAAA,SADJ;AAEIC,IAAAA;AAFJ,GAGM;AACH,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,KAAK,GAAGH,SAAS,CAACI,GAAV,CAAcC,CAAC,iBAAI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEA,CAAC,CAACC,EAAZ;AAAgB,IAAA,OAAO,EAAED,CAAC,CAACE,OAA3B;AAAoC,IAAA,SAAS,EAAEF,CAAC,CAACG,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,CAAd;AACA,QAAMC,MAAM,GAAGX,SAAS,CAAC;AACrBY,IAAAA,aAAa,EAAE;AACXC,MAAAA,QAAQ,EAAE;AADC,KADM;AAIrBC,IAAAA,QAAQ,EAAGC,MAAD,IAAwB;AAC9BX,MAAAA,QAAQ,CAACD,eAAe,CAACY,MAAM,CAACF,QAAR,CAAhB,CAAR;AACH;AANoB,GAAD,CAAxB;AAQA,sBACI;AAAK,IAAA,SAAS,EAAEpB,CAAC,CAACuB,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,IAAA,MAAM,EAAC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAKI;AAAK,IAAA,SAAS,EAAEvB,CAAC,CAACY,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KADL,CALJ,CADJ;AAWH,CA1BE;;AA8BP,MAAMY,WAAyD,GAAIC,KAAD,IAAW;AACzE,sBAAO;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,SAAS,EAAEtB,WAAjC;AACO,IAAA,WAAW,EAAC,eADnB;AAEO,IAAA,QAAQ,EAAE,CAACC,QAAD,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,eAIH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJG,CAAP;AAMH,CAPD;;AAQA,MAAMsB,WAAW,GAAGxB,SAAS,CAAkB;AAACyB,EAAAA,IAAI,EAAE;AAAP,CAAlB,CAAT,CAAkDJ,WAAlD,CAApB","sourcesContent":["import React from \"react\";\nimport s from \"./MyPost.module.css\"\nimport {MyPostsType} from \"./MyPostsConteiner\";\nimport {Post} from \"./Post/Post\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {renderField, required} from \"../../../reduxForm/renderField\";\nimport {useDispatch} from \"react-redux\";\nimport {useFormik} from \"formik\";\ntype valuesType = {\n    messages: string,\n}\nexport const MyPosts: React.FC<MyPostsType> =\n    ({\n         postsData,\n         setNewPostClick\n     }) => {\n        const dispatch = useDispatch()\n        const posts = postsData.map(p => <Post id={p.id} message={p.message} likeCount={p.likeCount}/>)\n        const formik = useFormik({\n            initialValues: {\n                messages: '',\n            },\n            onSubmit: (values: valuesType) => {\n                dispatch(setNewPostClick(values.messages))\n            },\n        })\n        return (\n            <div className={s.postBlock}>\n                <h3>My posts</h3>\n                <form action=\"\">\n\n                </form>\n                <div className={s.posts}>\n                    {posts}\n                </div>\n            </div>\n        )\n    }\nexport type SendMessageForm = {\n    message: string\n}\nconst SendMessage: React.FC<InjectedFormProps<SendMessageForm>> = (props) => {\n    return <form onSubmit={props.handleSubmit}>\n        <Field name='message' component={renderField}\n               placeholder='write message'\n               validate={[required]}/>\n        <button>add post</button>\n    </form>\n}\nconst ContactForm = reduxForm<SendMessageForm>({form: 'sendMessage'})(SendMessage)"]},"metadata":{},"sourceType":"module"}