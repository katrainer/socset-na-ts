{"ast":null,"code":"var _jsxFileName = \"D:\\\\It-inkubator\\\\socset-na-ts\\\\src\\\\components\\\\Users\\\\UsersContainer.tsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { changeCurrentPageTC, setUsersTC, subscribeTC, toggleFollowingInProgressAC, unSubscribeTC } from \"../../redux/reducer/usersPageReducer\";\nimport { Users } from './Users';\nimport { Preloader } from '../../common/Preloader/Preloader';\nexport class UsersAPIComponent extends React.Component {\n  componentDidMount() {\n    this.props.thunkSetUsers(this.props.currentPage, this.props.pageSize);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.preloader && /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      users: this.props.users,\n      thunkUnSubscribe: this.props.thunkUnSubscribe,\n      thunkSubscribe: this.props.thunkSubscribe,\n      thunkChangeCurrentPage: this.props.thunkChangeCurrentPage,\n      followingInProgress: this.props.followingInProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.userPage.users,\n    pageSize: state.userPage.pageSize,\n    totalUsersCount: state.userPage.totalUsersCount,\n    currentPage: state.userPage.currentPage,\n    preloader: state.userPage.preloader,\n    followingInProgress: state.userPage.followingInProgress\n  };\n};\n\nexport const UsersContainer = connect(mapStateToProps, {\n  setUsersTC,\n  toggleFollowingInProgressAC,\n  changeCurrentPageTC,\n  unSubscribeTC,\n  subscribeTC\n})(UsersAPIComponent);","map":{"version":3,"sources":["D:/It-inkubator/socset-na-ts/src/components/Users/UsersContainer.tsx"],"names":["React","connect","changeCurrentPageTC","setUsersTC","subscribeTC","toggleFollowingInProgressAC","unSubscribeTC","Users","Preloader","UsersAPIComponent","Component","componentDidMount","props","thunkSetUsers","currentPage","pageSize","render","preloader","totalUsersCount","users","thunkUnSubscribe","thunkSubscribe","thunkChangeCurrentPage","followingInProgress","mapStateToProps","state","userPage","UsersContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SACIC,mBADJ,EAEIC,UAFJ,EAGIC,WAHJ,EAGiBC,2BAHjB,EAIIC,aAJJ,QAMO,sCANP;AAOA,SAAQC,KAAR,QAAoB,SAApB;AACA,SAAQC,SAAR,QAAwB,kCAAxB;AAEA,OAAO,MAAMC,iBAAN,SAAgCT,KAAK,CAACU,SAAtC,CAA+D;AAClEC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,aAAX,CAAyB,KAAKD,KAAL,CAAWE,WAApC,EAAiD,KAAKF,KAAL,CAAWG,QAA5D;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBAAO,0CACF,KAAKJ,KAAL,CAAWK,SAAX,iBAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADtB,eAEH,oBAAC,KAAD;AACI,MAAA,eAAe,EAAE,KAAKL,KAAL,CAAWM,eADhC;AAEI,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWG,QAFzB;AAGI,MAAA,WAAW,EAAE,KAAKH,KAAL,CAAWE,WAH5B;AAII,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWO,KAJtB;AAKI,MAAA,gBAAgB,EAAE,KAAKP,KAAL,CAAWQ,gBALjC;AAMI,MAAA,cAAc,EAAE,KAAKR,KAAL,CAAWS,cAN/B;AAOI,MAAA,sBAAsB,EAAE,KAAKT,KAAL,CAAWU,sBAPvC;AAQI,MAAA,mBAAmB,EAAE,KAAKV,KAAL,CAAWW,mBARpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,CAAP;AAYH;;AAlBiE;;AA8BtE,MAAMC,eAAe,GAAIC,KAAD,IAAkD;AACtE,SAAO;AACHN,IAAAA,KAAK,EAAEM,KAAK,CAACC,QAAN,CAAeP,KADnB;AAEHJ,IAAAA,QAAQ,EAAEU,KAAK,CAACC,QAAN,CAAeX,QAFtB;AAGHG,IAAAA,eAAe,EAAEO,KAAK,CAACC,QAAN,CAAeR,eAH7B;AAIHJ,IAAAA,WAAW,EAAEW,KAAK,CAACC,QAAN,CAAeZ,WAJzB;AAKHG,IAAAA,SAAS,EAAEQ,KAAK,CAACC,QAAN,CAAeT,SALvB;AAMHM,IAAAA,mBAAmB,EAAEE,KAAK,CAACC,QAAN,CAAeH;AANjC,GAAP;AAQH,CATD;;AAYA,OAAO,MAAMI,cAAc,GAAG1B,OAAO,CAACuB,eAAD,EAAkB;AACnDrB,EAAAA,UADmD;AACvCE,EAAAA,2BADuC;AAEnDH,EAAAA,mBAFmD;AAE9BI,EAAAA,aAF8B;AAEfF,EAAAA;AAFe,CAAlB,CAAP,CAG3BK,iBAH2B,CAAvB","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../redux/store\";\r\nimport {\r\n    changeCurrentPageTC,\r\n    setUsersTC,\r\n    subscribeTC, toggleFollowingInProgressAC,\r\n    unSubscribeTC,\r\n    UsersType\r\n} from \"../../redux/reducer/usersPageReducer\";\r\nimport {Users} from './Users';\r\nimport {Preloader} from '../../common/Preloader/Preloader';\r\n\r\nexport class UsersAPIComponent extends React.Component<UserPropsType> {\r\n    componentDidMount() {\r\n        this.props.thunkSetUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.preloader && <Preloader/>}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                users={this.props.users}\r\n                thunkUnSubscribe={this.props.thunkUnSubscribe}\r\n                thunkSubscribe={this.props.thunkSubscribe}\r\n                thunkChangeCurrentPage={this.props.thunkChangeCurrentPage}\r\n                followingInProgress={this.props.followingInProgress}/>\r\n        </>\r\n    }\r\n}\r\n\r\ntype MapStateToPropsType = UsersType\r\n\r\ntype MapDispatchToPropsType = {\r\n    thunkSubscribe: (id: string) => void\r\n    thunkUnSubscribe: (id: string) => void\r\n    thunkSetUsers: (currentPage: number, pageSize: number) => void\r\n    thunkChangeCurrentPage: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType): MapStateToPropsType => {\r\n    return {\r\n        users: state.userPage.users,\r\n        pageSize: state.userPage.pageSize,\r\n        totalUsersCount: state.userPage.totalUsersCount,\r\n        currentPage: state.userPage.currentPage,\r\n        preloader: state.userPage.preloader,\r\n        followingInProgress: state.userPage.followingInProgress,\r\n    }\r\n}\r\n\r\nexport type UserPropsType = MapStateToPropsType & MapDispatchToPropsType\r\nexport const UsersContainer = connect(mapStateToProps, {\r\n    setUsersTC, toggleFollowingInProgressAC,\r\n    changeCurrentPageTC, unSubscribeTC, subscribeTC\r\n})(UsersAPIComponent)\r\n"]},"metadata":{},"sourceType":"module"}