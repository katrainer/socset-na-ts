{"ast":null,"code":"var _jsxFileName = \"D:\\\\It-inkubator\\\\socset-na-ts\\\\src\\\\components\\\\Friends\\\\Friends.tsx\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport React, { useEffect } from 'react';\nimport { changeCurrentPageTC } from '../../redux/reducer/usersPageReducer';\nimport userAvatar from '../../assets/img/null_avatar.png';\nexport const Friends = () => {\n  const isAuth = useSelector(state => state.login.isAuth);\n  const users = useSelector(state => state.userPage.users);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(changeCurrentPageTC(1, 100, true));\n  }, [users]);\n  if (!isAuth) return /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 25\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }\n  }, users.map(t => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: t.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: '/profile/' + t.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: t.photos.small === null ? userAvatar : t.photos.small,\n      alt: \"\\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\\u043A\\u0430 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }\n    }, t.name), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }, t.status ? t.status : 'no status')), t.followed ? /*#__PURE__*/React.createElement(\"button\", {\n      disabled: followingInProgress.some(id => id === t.id),\n      onClick: () => onClickUnSubHandler(t.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 35\n      }\n    }, \"unfollow\") : /*#__PURE__*/React.createElement(\"button\", {\n      disabled: followingInProgress.some(id => id === t.id),\n      onClick: () => onClickSubHandler(t.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }, \"follow\"));\n  }));\n};","map":{"version":3,"sources":["D:/It-inkubator/socset-na-ts/src/components/Friends/Friends.tsx"],"names":["useDispatch","useSelector","NavLink","Redirect","React","useEffect","changeCurrentPageTC","userAvatar","Friends","isAuth","state","login","users","userPage","dispatch","map","t","id","photos","small","name","fontSize","status","followed","followingInProgress","some","onClickUnSubHandler","onClickSubHandler"],"mappings":";AAAA,SAAQA,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AAEA,SAAQC,OAAR,EAAiBC,QAAjB,QAAgC,kBAAhC;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,SAAQC,mBAAR,QAAkC,sCAAlC;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AACzB,QAAMC,MAAM,GAAGR,WAAW,CAA4BS,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYF,MAAjD,CAA1B;AACA,QAAMG,KAAK,GAAGX,WAAW,CAA+BS,KAAK,IAAIA,KAAK,CAACG,QAAN,CAAeD,KAAvD,CAAzB;AACA,QAAME,QAAQ,GAAGd,WAAW,EAA5B;AAEAK,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,QAAQ,CAACR,mBAAmB,CAAC,CAAD,EAAI,GAAJ,EAAS,IAAT,CAApB,CAAR;AACH,GAFQ,EAEN,CAACM,KAAD,CAFM,CAAT;AAGA,MAAI,CAACH,MAAL,EAAa,oBAAO,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFG,KAAK,CAACG,GAAN,CAAUC,CAAC,IAAI;AACZ,wBACI;AAAK,MAAA,GAAG,EAAEA,CAAC,CAACC,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAE,cAAcD,CAAC,CAACC,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,GAAG,EAAED,CAAC,CAACE,MAAF,CAASC,KAAT,KAAmB,IAAnB,GACCZ,UADD,GAECS,CAAC,CAACE,MAAF,CAASC,KAHnB;AAG0B,MAAA,GAAG,EAAC,iIAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOH,CAAC,CAACI,IAAT,CADJ,eAEI;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACaL,CAAC,CAACM,MAAF,GAAWN,CAAC,CAACM,MAAb,GAAsB,WADnC,CAFJ,CAVJ,EAgBKN,CAAC,CAACO,QAAF,gBAAa;AACN,MAAA,QAAQ,EAAEC,mBAAmB,CAACC,IAApB,CAAyBR,EAAE,IAAIA,EAAE,KAAKD,CAAC,CAACC,EAAxC,CADJ;AAGN,MAAA,OAAO,EAAE,MAAMS,mBAAmB,CAACV,CAAC,CAACC,EAAH,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAb,gBAMG;AACI,MAAA,QAAQ,EAAEO,mBAAmB,CAACC,IAApB,CAAyBR,EAAE,IAAIA,EAAE,KAAKD,CAAC,CAACC,EAAxC,CADd;AAEI,MAAA,OAAO,EAAE,MAAMU,iBAAiB,CAACX,CAAC,CAACC,EAAH,CAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBR,CADJ;AA6BH,GA9BA,CADE,CAAP;AAiCH,CA1CM","sourcesContent":["import {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../redux/store';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport React, {useEffect} from 'react';\r\nimport {UserType} from '../../api/userApi';\r\nimport {changeCurrentPageTC} from '../../redux/reducer/usersPageReducer';\r\nimport userAvatar from '../../assets/img/null_avatar.png';\r\n\r\nexport const Friends = () => {\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n    const users = useSelector<AppRootStateType, UserType[]>(state => state.userPage.users)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(changeCurrentPageTC(1, 100, true))\r\n    }, [users])\r\n    if (!isAuth) return <Redirect to=\"/login\"/>\r\n    return <div>\r\n        {users.map(t => {\r\n            return (\r\n                <div key={t.id}>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + t.id}>\r\n                            <img\r\n                                src={t.photos.small === null\r\n                                    ? userAvatar\r\n                                    : t.photos.small} alt=\"аватарка пользователей\"\r\n                            />\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        <span>{t.name}</span>\r\n                        <span style={{fontSize: 16}}>\r\n                                    {t.status ? t.status : 'no status'}\r\n                                </span>\r\n                    </div>\r\n                    {t.followed ? <button\r\n                            disabled={followingInProgress.some(id => id === t.id\r\n                            )}\r\n                            onClick={() => onClickUnSubHandler(t.id)}>\r\n                            unfollow\r\n                        </button> :\r\n                        <button\r\n                            disabled={followingInProgress.some(id => id === t.id)}\r\n                            onClick={() => onClickSubHandler(t.id)}>follow\r\n                        </button>}\r\n                </div>\r\n            )\r\n        })}\r\n    </div>\r\n}"]},"metadata":{},"sourceType":"module"}