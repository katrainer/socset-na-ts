{"ast":null,"code":"import { v1 } from \"uuid\";\nimport { profileAPI } from \"../../API\";\nimport { changePreloaderAC, enumCommonActionType } from \"../../common/commonReducer\";\nexport let enumProfileActionType;\n\n(function (enumProfileActionType) {\n  enumProfileActionType[\"setNewPostClick\"] = \"PROFILE/SET-NEW-POST-CLICK\";\n  enumProfileActionType[\"setProfileUserData\"] = \"PROFILE/SET-PROFILE-USER-DATA\";\n  enumProfileActionType[\"setStatus\"] = \"PROFILE/SET-STATUS\";\n})(enumProfileActionType || (enumProfileActionType = {}));\n\nconst initialState = {\n  postsData: [{\n    id: v1(),\n    message: 'yo',\n    likeCount: 12\n  }, {\n    id: v1(),\n    message: 'yoyo',\n    likeCount: 212\n  }, {\n    id: v1(),\n    message: 'yoyo',\n    likeCount: 212\n  }],\n  userProfilePage: null,\n  preloader: false,\n  status: ''\n};\nexport const profilePageReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case enumProfileActionType.setNewPostClick:\n      return { ...state,\n        postsData: [{ ...action.payload\n        }, ...state.postsData]\n      };\n\n    case enumProfileActionType.setProfileUserData:\n      return { ...state,\n        ...action.payload\n      };\n\n    case enumCommonActionType.changePreloader:\n      return { ...state,\n        ...action.payload\n      };\n\n    case enumProfileActionType.setStatus:\n      return { ...state,\n        ...action.payload\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}; //action\n\nexport const setNewPostClickAC = message => {\n  return {\n    type: enumProfileActionType.setNewPostClick,\n    payload: {\n      message,\n      likeCount: 0,\n      id: v1()\n    }\n  };\n};\nexport const setProfileUserDataAC = userProfilePage => {\n  return {\n    type: enumProfileActionType.setProfileUserData,\n    payload: {\n      userProfilePage\n    }\n  };\n};\nexport const setStatusAC = status => {\n  return {\n    type: enumProfileActionType.setStatus,\n    payload: {\n      status\n    }\n  };\n}; //thunk\n\nexport const setProfileUserDataTC = param => async dispatch => {\n  dispatch(changePreloaderAC(true));\n  let userId = param.match.params.userId;\n\n  if (!userId) {\n    userId = '16550';\n  }\n\n  profileAPI.getProfileUserData(userId).then(data => {\n    dispatch(changePreloaderAC(false));\n    dispatch(setProfileUserDataAC(data));\n  });\n};\nexport const getStatusTC = param => dispatch => {\n  let userId = param.match.params.userId;\n\n  if (!userId) {\n    userId = '16550';\n  }\n\n  profileAPI.getProfileStatus(userId).then(data => {\n    dispatch(setStatusAC(data));\n  });\n};\nexport const updateStatusTC = status => dispatch => {\n  profileAPI.updateProfileStatus(status).then(data => {\n    if (data.resultCode === 0) {\n      dispatch(setStatusAC(status));\n    }\n  });\n}; //type","map":{"version":3,"sources":["D:/It-inkubator/socset-na-ts/src/redux/reducer/profilePageReducer.ts"],"names":["v1","profileAPI","changePreloaderAC","enumCommonActionType","enumProfileActionType","initialState","postsData","id","message","likeCount","userProfilePage","preloader","status","profilePageReducer","state","action","type","setNewPostClick","payload","setProfileUserData","changePreloader","setStatus","setNewPostClickAC","setProfileUserDataAC","setStatusAC","setProfileUserDataTC","param","dispatch","userId","match","params","getProfileUserData","then","data","getStatusTC","getProfileStatus","updateStatusTC","updateProfileStatus","resultCode"],"mappings":"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","sourcesContent":["import {v1} from \"uuid\";\r\nimport {AppThunk} from \"../store\";\r\nimport {profileAPI} from \"../../API\";\r\nimport {changePreloaderAC, enumCommonActionType, preloaderACType} from \"../../common/commonReducer\";\r\n\r\nexport enum enumProfileActionType {\r\n    setNewPostClick = 'PROFILE/SET-NEW-POST-CLICK',\r\n    setProfileUserData = 'PROFILE/SET-PROFILE-USER-DATA',\r\n    setStatus = 'PROFILE/SET-STATUS',\r\n}\r\n\r\nconst initialState: ProfilePageType = {\r\n    postsData: [\r\n        {id: v1(), message: 'yo', likeCount: 12},\r\n        {id: v1(), message: 'yoyo', likeCount: 212},\r\n        {id: v1(), message: 'yoyo', likeCount: 212},\r\n    ],\r\n    userProfilePage: null,\r\n    preloader: false,\r\n    status: ''\r\n}\r\nexport const profilePageReducer = (state: ProfilePageType = initialState, action: ProfileActionType): ProfilePageType => {\r\n    switch (action.type) {\r\n        case enumProfileActionType.setNewPostClick:\r\n            return {\r\n                ...state, postsData: [{...action.payload},\r\n                    ...state.postsData]\r\n            }\r\n        case enumProfileActionType.setProfileUserData:\r\n            return {...state, ...action.payload}\r\n        case enumCommonActionType.changePreloader:\r\n            return {...state, ...action.payload}\r\n        case enumProfileActionType.setStatus:\r\n            return {...state, ...action.payload}\r\n        default :\r\n            return {...state}\r\n    }\r\n}\r\n\r\n//action\r\nexport const setNewPostClickAC = (message: string) => {\r\n    return {\r\n        type: enumProfileActionType.setNewPostClick,\r\n        payload: {message, likeCount: 0, id: v1()},\r\n    } as const\r\n}\r\nexport const setProfileUserDataAC = (userProfilePage: userProfilePageType) => {\r\n    return {\r\n        type: enumProfileActionType.setProfileUserData,\r\n        payload: {userProfilePage}\r\n    } as const\r\n}\r\nexport const setStatusAC = (status: string) => {\r\n    return {\r\n        type: enumProfileActionType.setStatus,\r\n        payload: {status},\r\n    } as const\r\n}\r\n\r\n//thunk\r\nexport const setProfileUserDataTC = (param: any): AppThunk =>\r\n    async (dispatch) => {\r\n        dispatch(changePreloaderAC(true))\r\n        let userId = param.match.params.userId\r\n        if (!userId) {\r\n            userId = '16550'\r\n        }\r\n        profileAPI.getProfileUserData(userId).then(data => {\r\n            dispatch(changePreloaderAC(false))\r\n            dispatch(setProfileUserDataAC(data))\r\n        })\r\n    }\r\nexport const getStatusTC = (param: any): AppThunk =>\r\n    dispatch => {\r\n        let userId = param.match.params.userId\r\n        if (!userId) {\r\n            userId = '16550'\r\n        }\r\n        profileAPI.getProfileStatus(userId).then(data => {\r\n            dispatch(setStatusAC(data))\r\n        })\r\n    }\r\nexport const updateStatusTC = (status: string): AppThunk =>\r\n    dispatch => {\r\n        profileAPI.updateProfileStatus(status).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(setStatusAC(status))\r\n            }\r\n        })\r\n    }\r\n\r\n//type\r\nexport type ProfilePageType = {\r\n    postsData: PostDataProps[]\r\n    userProfilePage: userProfilePageType | null\r\n    preloader: boolean\r\n    status: string\r\n}\r\nexport type PostDataProps = {\r\n    id: string\r\n    message: string\r\n    likeCount: number\r\n}\r\nexport type userProfilePageType = {\r\n    aboutMe: string | null\r\n    contacts: {\r\n        facebook: string | null\r\n        website: string | null\r\n        vk: string | null\r\n        twitter: string | null\r\n        instagram: string | null\r\n        youtube: string | null\r\n        github: string | null\r\n        mainLink: string | null\r\n    }\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string | null\r\n    fullName: string\r\n    userId: number\r\n    photos: {\r\n        small: string | undefined\r\n        large: string | undefined\r\n    }\r\n}\r\nexport type ProfileActionType = ReturnType<typeof setNewPostClickAC>\r\n    | ReturnType<typeof setProfileUserDataAC>\r\n    | preloaderACType\r\n    | ReturnType<typeof setStatusAC>"]},"metadata":{},"sourceType":"module"}