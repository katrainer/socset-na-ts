{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { setNewMessageText } from '../../redux/reducer/messagesPageReducer';\nimport { compose } from 'redux';\nimport { WithAuthRedirect } from \"../../hoc/withAuthRedirect\";\n\nconst mapStateToProps = state => {\n  return {\n    dialogsData: state.messagesPageReducer.dialogsData,\n    messagesData: state.messagesPageReducer.messagesData\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  setNewMessageText\n}), WithAuthRedirect)(DialogsFormik);","map":{"version":3,"sources":["D:/It-inkubator/socset-na-ts/src/components/Dialogs/DialogsContainer.tsx"],"names":["connect","setNewMessageText","compose","WithAuthRedirect","mapStateToProps","state","dialogsData","messagesPageReducer","messagesData","DialogsFormik"],"mappings":"AAEA,SAAQA,OAAR,QAAsB,aAAtB;AAEA,SAA6CC,iBAA7C,QAAqE,yCAArE;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,gBAAR,QAA+B,4BAA/B;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAA8C;AAClE,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACE,mBAAN,CAA0BD,WADpC;AAEHE,IAAAA,YAAY,EAAEH,KAAK,CAACE,mBAAN,CAA0BC;AAFrC,GAAP;AAIH,CALD;;AAgBA,eAAeN,OAAO,CAClBF,OAAO,CAACI,eAAD,EAAkB;AAAEH,EAAAA;AAAF,CAAlB,CADW,EAElBE,gBAFkB,CAAP,CAGbM,aAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/storeRedux\";\r\nimport {DialogsDataProps, MessagesDataProps, setNewMessageText} from '../../redux/reducer/messagesPageReducer';\r\nimport {compose} from 'redux';\r\nimport {WithAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        dialogsData: state.messagesPageReducer.dialogsData,\r\n        messagesData: state.messagesPageReducer.messagesData,\r\n    }\r\n}\r\ntype MapStateToPropsType = {\r\n    dialogsData: DialogsDataProps[]\r\n    messagesData: MessagesDataProps[]\r\n}\r\ntype MapDispatchToPropsType = {\r\n    setNewMessageText: (e: string) => void\r\n}\r\nexport type DialogsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, { setNewMessageText}),\r\n    WithAuthRedirect,\r\n)(DialogsFormik)"]},"metadata":{},"sourceType":"module"}