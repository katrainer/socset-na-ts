{"ast":null,"code":"var _jsxFileName = \"D:\\\\It-inkubator\\\\socset-na-ts\\\\src\\\\components\\\\Profile\\\\ProfileConteiner.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Profile } from \"./Profile\";\nimport { Preloader } from \"../../common/Preloader/Preloader\";\nimport { getStatusTC, setProfileUserDataTC, updateStatusTC } from \"../../redux/reducer/profilePageReducer\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { WithAuthRedirect } from \"../../hoc/withAuthRedirect\";\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    this.props.thunkSetProfileUserData(this.props);\n    this.props.thunkGETStatus(this.props);\n  }\n\n  render() {\n    // if (!this.props.isAuth) return <Redirect to='/login'/>\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.preloader && /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(Profile, {\n      profileUserData: this.props.userProfilePage,\n      status: this.props.status,\n      thunkUpdateStatus: this.props.thunkUpdateStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }), \";\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    preloader: state.usersPageReducer.preloader,\n    userProfilePage: state.profilePageReducer.userProfilePage,\n    status: state.profilePageReducer.status\n  };\n}; // export default withRouter(connect(mapStateToProps,\n//     {thunkSetProfileUserData})(ProfileContainer))\n\n\nexport default compose(connect(mapStateToProps, {\n  thunkSetProfileUserData: setProfileUserDataTC,\n  thunkGETStatus: getStatusTC,\n  thunkUpdateStatus: updateStatusTC\n}), withRouter, WithAuthRedirect)(ProfileContainer);","map":{"version":3,"sources":["D:/It-inkubator/socset-na-ts/src/components/Profile/ProfileConteiner.tsx"],"names":["React","connect","Profile","Preloader","getStatusTC","setProfileUserDataTC","updateStatusTC","withRouter","compose","WithAuthRedirect","ProfileContainer","Component","componentDidMount","props","thunkSetProfileUserData","thunkGETStatus","render","preloader","userProfilePage","status","thunkUpdateStatus","mapStateToProps","state","usersPageReducer","profilePageReducer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAAQC,SAAR,QAAwB,kCAAxB;AAEA,SACIC,WADJ,EAEIC,oBAFJ,EAGIC,cAHJ,QAKO,wCALP;AAMA,SAA6BC,UAA7B,QAA8C,kBAA9C;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,gBAAR,QAA+B,4BAA/B;;AAEA,MAAMC,gBAAN,SAA+BV,KAAK,CAACW,SAArC,CAA0D;AACtDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,uBAAX,CAAmC,KAAKD,KAAxC;AACA,SAAKA,KAAL,CAAWE,cAAX,CAA0B,KAAKF,KAA/B;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL;AACA,wBAAO,0CACF,KAAKH,KAAL,CAAWI,SAAX,iBAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADtB,eAEH,oBAAC,OAAD;AACI,MAAA,eAAe,EAAE,KAAKJ,KAAL,CAAWK,eADhC;AAEI,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWM,MAFvB;AAGI,MAAA,iBAAiB,EAAE,KAAKN,KAAL,CAAWO,iBAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,MAAP;AAOH;;AAfqD;;AAkC1D,MAAMC,eAAe,GAAIC,KAAD,IAAyB;AAC7C,SAAO;AACHL,IAAAA,SAAS,EAAEK,KAAK,CAACC,gBAAN,CAAuBN,SAD/B;AAEHC,IAAAA,eAAe,EAAEI,KAAK,CAACE,kBAAN,CAAyBN,eAFvC;AAGHC,IAAAA,MAAM,EAAEG,KAAK,CAACE,kBAAN,CAAyBL;AAH9B,GAAP;AAKH,CAND,C,CAOA;AACA;;;AAEA,eAAeX,OAAO,CAClBP,OAAO,CAACoB,eAAD,EACH;AAACP,EAAAA,uBAAuB,EAAET,oBAA1B;AAAgDU,EAAAA,cAAc,EAAEX,WAAhE;AACIgB,EAAAA,iBAAiB,EAAEd;AADvB,CADG,CADW,EAIlBC,UAJkB,EAKlBE,gBALkB,CAAP,CAMbC,gBANa,CAAf","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Profile} from \"./Profile\";\nimport {Preloader} from \"../../common/Preloader/Preloader\";\nimport {AppStateType} from \"../../redux/store\";\nimport {\n    getStatusTC,\n    setProfileUserDataTC,\n    updateStatusTC,\n    userProfilePageType\n} from \"../../redux/reducer/profilePageReducer\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport {WithAuthRedirect} from \"../../hoc/withAuthRedirect\";\n\nclass ProfileContainer extends React.Component<PropsType> {\n    componentDidMount() {\n        this.props.thunkSetProfileUserData(this.props)\n        this.props.thunkGETStatus(this.props)\n    }\n\n    render() {\n        // if (!this.props.isAuth) return <Redirect to='/login'/>\n        return <>\n            {this.props.preloader && <Preloader/>}\n            <Profile\n                profileUserData={this.props.userProfilePage}\n                status={this.props.status}\n                thunkUpdateStatus={this.props.thunkUpdateStatus}/>;\n        </>\n    }\n}\n\ntype PathParamsType = {\n    userId: string,\n}\ntype MapStateToPropsType = {\n    preloader: boolean\n    userProfilePage: userProfilePageType | null\n    status: string\n}\ntype MapDispatchToPropsType = {\n    thunkSetProfileUserData: (param: any) => void\n    thunkGETStatus: (param: any) => void\n    thunkUpdateStatus: (status:string)=>void\n}\nexport type ProfilePropsType = MapStateToPropsType & MapDispatchToPropsType\ntype PropsType = RouteComponentProps<PathParamsType> & ProfilePropsType\n\nconst mapStateToProps = (state: AppStateType) => {\n    return {\n        preloader: state.usersPageReducer.preloader,\n        userProfilePage: state.profilePageReducer.userProfilePage,\n        status: state.profilePageReducer.status\n    }\n}\n// export default withRouter(connect(mapStateToProps,\n//     {thunkSetProfileUserData})(ProfileContainer))\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps,\n        {thunkSetProfileUserData: setProfileUserDataTC, thunkGETStatus: getStatusTC,\n            thunkUpdateStatus: updateStatusTC,}),\n    withRouter,\n    WithAuthRedirect,\n)(ProfileContainer)"]},"metadata":{},"sourceType":"module"}