{"ast":null,"code":"import { instance } from './apiConfig/apiConfig';\nexport const profileAPI = {\n  getProfileUserData(userId) {\n    return instance.get(`profile/` + userId);\n  },\n\n  getProfileStatus(userId) {\n    return instance.get('profile/status/' + userId);\n  },\n\n  updateProfileStatus(status) {\n    return instance.put('profile/status', {\n      status\n    });\n  }\n\n};\nexport const headerAPI = {};\nexport const authAPI = {\n  setLogin(email, password, rememberMe) {\n    return instance.post('auth/login', {\n      email,\n      password,\n      rememberMe\n    });\n  },\n\n  outLogin() {\n    return instance.delete('auth/login');\n  },\n\n  setAuthData() {\n    return instance.get('auth/me');\n  }\n\n}; //type","map":{"version":3,"sources":["D:/It-inkubator/socset-na-ts/src/api/API.ts"],"names":["instance","profileAPI","getProfileUserData","userId","get","getProfileStatus","updateProfileStatus","status","put","headerAPI","authAPI","setLogin","email","password","rememberMe","post","outLogin","delete","setAuthData"],"mappings":"AACA,SAAQA,QAAR,QAAuB,uBAAvB;AAEA,OAAO,MAAMC,UAAU,GAAG;AACtBC,EAAAA,kBAAkB,CAACC,MAAD,EAAiB;AAC/B,WAAOH,QAAQ,CAACI,GAAT,CAAqC,UAAD,GAAaD,MAAjD,CAAP;AACH,GAHqB;;AAItBE,EAAAA,gBAAgB,CAACF,MAAD,EAAiB;AAC7B,WAAOH,QAAQ,CAACI,GAAT,CAAqB,oBAAoBD,MAAzC,CAAP;AACH,GANqB;;AAOtBG,EAAAA,mBAAmB,CAACC,MAAD,EAAiB;AAChC,WAAOP,QAAQ,CAACQ,GAAT,CAA2B,gBAA3B,EAA6C;AAACD,MAAAA;AAAD,KAA7C,CAAP;AACH;;AATqB,CAAnB;AAWP,OAAO,MAAME,SAAS,GAAG,EAAlB;AACP,OAAO,MAAMC,OAAO,GAAG;AACnBC,EAAAA,QAAQ,CAACC,KAAD,EAAgBC,QAAhB,EAAkCC,UAAlC,EAAuD;AAC3D,WAAOd,QAAQ,CAACe,IAAT,CACN,YADM,EACQ;AAACH,MAAAA,KAAD;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA;AAAlB,KADR,CAAP;AAEH,GAJkB;;AAKnBE,EAAAA,QAAQ,GAAG;AACP,WAAOhB,QAAQ,CAACiB,MAAT,CAA8B,YAA9B,CAAP;AACH,GAPkB;;AAQnBC,EAAAA,WAAW,GAAG;AACV,WAAOlB,QAAQ,CAACI,GAAT,CAIH,SAJG,CAAP;AAKH;;AAdkB,CAAhB,C,CAiBP","sourcesContent":["import {AxiosResponse} from 'axios';\r\nimport {instance} from './apiConfig/apiConfig';\r\n\r\nexport const profileAPI = {\r\n    getProfileUserData(userId: string) {\r\n        return instance.get<ResponseGetUsersPages>(`profile/` + userId)\r\n    },\r\n    getProfileStatus(userId: string) {\r\n        return instance.get<string>('profile/status/' + userId)\r\n    },\r\n    updateProfileStatus(status: string) {\r\n        return instance.put<ResponseType>('profile/status', {status})\r\n    }\r\n}\r\nexport const headerAPI = {}\r\nexport const authAPI = {\r\n    setLogin(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<{ email: string, password: string, rememberMe: boolean }, AxiosResponse<ResponseType<{ userId: number }>>>\r\n        ('auth/login', {email, password, rememberMe,})\r\n    },\r\n    outLogin() {\r\n        return instance.delete<ResponseType>('auth/login')\r\n    },\r\n    setAuthData() {\r\n        return instance.get<ResponseType<{\r\n            id: number,\r\n            email: string,\r\n            login: string,\r\n        }>>('auth/me')\r\n    }\r\n}\r\n\r\n//type\r\nexport type ResponseType<D = {}> = {\r\n    resultCode: number\r\n    messages: Array<string>\r\n    fieldsErrors: Array<string>\r\n    data: D\r\n}\r\n\r\nexport type ResponseGetUsersPages = {\r\n    aboutMe: string | null\r\n    contacts: {\r\n        facebook: string | null\r\n        website: string | null\r\n        vk: string | null\r\n        twitter: string | null\r\n        instagram: string | null\r\n        youtube: string | null\r\n        github: string | null\r\n        mainLink: string | null\r\n    }\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string | null\r\n    fullName: string\r\n    userId: number\r\n    photos: {\r\n        small: string | undefined\r\n        large: string | undefined\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}