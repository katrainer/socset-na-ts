{"ast":null,"code":"var _jsxFileName = \"D:\\\\It-inkubator\\\\socset-na-ts\\\\src\\\\components\\\\Users\\\\UsersContainer.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { changeCurrentPageTC, setUsersTC, subscribeTC, unSubscribeTC } from '../../redux/reducer/usersPageReducer';\nimport { Users } from './Users';\nimport { Preloader } from '../../common/Preloader/Preloader';\nimport { getCurrentPage, getFollowingInProgress, getPageSize, getPreloader, getTotalUsersCount, getUsers } from '../../redux/reducer/selectors/user-selector';\nexport class UsersAPIComponent extends React.PureComponent {\n  componentDidMount() {\n    this.props.setUsersTC(this.props.currentPage, this.props.pageSize);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.preloader && /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      users: this.props.users,\n      thunkUnSubscribe: this.props.unSubscribeTC,\n      thunkSubscribe: this.props.subscribeTC,\n      thunkChangeCurrentPage: this.props.changeCurrentPageTC,\n      followingInProgress: this.props.followingInProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: getUsers(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    preloader: getPreloader(state),\n    followingInProgress: getFollowingInProgress(state)\n  };\n};\n\nexport const UsersContainer = connect(mapStateToProps, {\n  setUsersTC,\n  changeCurrentPageTC,\n  unSubscribeTC,\n  subscribeTC\n})(UsersAPIComponent);","map":{"version":3,"sources":["D:/It-inkubator/socset-na-ts/src/components/Users/UsersContainer.tsx"],"names":["React","connect","changeCurrentPageTC","setUsersTC","subscribeTC","unSubscribeTC","Users","Preloader","getCurrentPage","getFollowingInProgress","getPageSize","getPreloader","getTotalUsersCount","getUsers","UsersAPIComponent","PureComponent","componentDidMount","props","currentPage","pageSize","render","preloader","totalUsersCount","users","followingInProgress","mapStateToProps","state","UsersContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SACIC,mBADJ,EAEIC,UAFJ,EAGIC,WAHJ,EAIIC,aAJJ,QAKO,sCALP;AAMA,SAAQC,KAAR,QAAoB,SAApB;AACA,SAAQC,SAAR,QAAwB,kCAAxB;AACA,SACIC,cADJ,EACoBC,sBADpB,EAEIC,WAFJ,EAGIC,YAHJ,EAIIC,kBAJJ,EAKIC,QALJ,QAMO,6CANP;AAQA,OAAO,MAAMC,iBAAN,SAAgCd,KAAK,CAACe,aAAtC,CAAmE;AACtEC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWd,UAAX,CAAsB,KAAKc,KAAL,CAAWC,WAAjC,EAA8C,KAAKD,KAAL,CAAWE,QAAzD;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBAAO,0CACF,KAAKH,KAAL,CAAWI,SAAX,iBAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADtB,eAEH,oBAAC,KAAD;AACI,MAAA,eAAe,EAAE,KAAKJ,KAAL,CAAWK,eADhC;AAEI,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWE,QAFzB;AAGI,MAAA,WAAW,EAAE,KAAKF,KAAL,CAAWC,WAH5B;AAII,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWM,KAJtB;AAKI,MAAA,gBAAgB,EAAE,KAAKN,KAAL,CAAWZ,aALjC;AAMI,MAAA,cAAc,EAAE,KAAKY,KAAL,CAAWb,WAN/B;AAOI,MAAA,sBAAsB,EAAE,KAAKa,KAAL,CAAWf,mBAPvC;AAQI,MAAA,mBAAmB,EAAE,KAAKe,KAAL,CAAWO,mBARpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,CAAP;AAYH;;AAlBqE;;AA8B1E,MAAMC,eAAe,GAAIC,KAAD,IAAkD;AACtE,SAAO;AACHH,IAAAA,KAAK,EAAEV,QAAQ,CAACa,KAAD,CADZ;AAEHP,IAAAA,QAAQ,EAAET,WAAW,CAACgB,KAAD,CAFlB;AAGHJ,IAAAA,eAAe,EAAEV,kBAAkB,CAACc,KAAD,CAHhC;AAIHR,IAAAA,WAAW,EAAEV,cAAc,CAACkB,KAAD,CAJxB;AAKHL,IAAAA,SAAS,EAAEV,YAAY,CAACe,KAAD,CALpB;AAMHF,IAAAA,mBAAmB,EAAEf,sBAAsB,CAACiB,KAAD;AANxC,GAAP;AAQH,CATD;;AAYA,OAAO,MAAMC,cAAc,GAAG1B,OAAO,CAACwB,eAAD,EAAkB;AACnDtB,EAAAA,UADmD;AAEnDD,EAAAA,mBAFmD;AAE9BG,EAAAA,aAF8B;AAEfD,EAAAA;AAFe,CAAlB,CAAP,CAG3BU,iBAH2B,CAAvB","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {AppRootStateType} from '../../redux/store';\r\nimport {\r\n    changeCurrentPageTC,\r\n    setUsersTC,\r\n    subscribeTC,\r\n    unSubscribeTC,\r\n} from '../../redux/reducer/usersPageReducer';\r\nimport {Users} from './Users';\r\nimport {Preloader} from '../../common/Preloader/Preloader';\r\nimport {\r\n    getCurrentPage, getFollowingInProgress,\r\n    getPageSize,\r\n    getPreloader,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from '../../redux/reducer/selectors/user-selector';\r\n\r\nexport class UsersAPIComponent extends React.PureComponent<UserPropsType> {\r\n    componentDidMount() {\r\n        this.props.setUsersTC(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.preloader && <Preloader/>}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                users={this.props.users}\r\n                thunkUnSubscribe={this.props.unSubscribeTC}\r\n                thunkSubscribe={this.props.subscribeTC}\r\n                thunkChangeCurrentPage={this.props.changeCurrentPageTC}\r\n                followingInProgress={this.props.followingInProgress}/>\r\n        </>\r\n    }\r\n}\r\n\r\ntype MapStateToPropsType = UsersType\r\n\r\ntype MapDispatchToPropsType = {\r\n    subscribeTC: (id: string) => void\r\n    unSubscribeTC: (id: string) => void\r\n    setUsersTC: (currentPage: number, pageSize: number) => void\r\n    changeCurrentPageTC: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType): MapStateToPropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        preloader: getPreloader(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\nexport type UserPropsType = MapStateToPropsType & MapDispatchToPropsType\r\nexport const UsersContainer = connect(mapStateToProps, {\r\n    setUsersTC,\r\n    changeCurrentPageTC, unSubscribeTC, subscribeTC\r\n})(UsersAPIComponent)\r\n"]},"metadata":{},"sourceType":"module"}