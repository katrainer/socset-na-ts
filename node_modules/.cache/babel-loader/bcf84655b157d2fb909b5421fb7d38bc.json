{"ast":null,"code":"var _jsxFileName = \"D:\\\\It-inkubator\\\\socset-na-ts\\\\src\\\\components\\\\Login\\\\LoginFormik.tsx\";\nimport React from \"react\";\nimport { Field, reduxForm } from 'redux-form';\nimport { ThunkLogIn } from \"../../redux/reducer/authReducer\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nconst LoginFormik = _ref => {\n  let {\n    ThunkLogIn,\n    isAuth\n  } = _ref;\n  if (isAuth) return /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 23\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"LOGIN\"));\n};\n\nconst LoginForm = props => {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"email\",\n    type: \"text\",\n    component: \"input\",\n    placeholder: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 14\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"password\",\n    type: \"password\",\n    component: \"input\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 14\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"rememberMe\",\n    type: \"checkbox\",\n    component: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 14\n    }\n  }), \" remember me\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"Log in\")));\n};\n\nconst pstp = state => {\n  return {\n    isAuth: state.authReducer.isAuth\n  };\n};\n\nconst ContactForm = reduxForm({\n  form: 'login'\n})(LoginForm);\nexport default connect(pstp, {\n  ThunkLogIn\n})(LoginFormik);","map":{"version":3,"sources":["D:/It-inkubator/socset-na-ts/src/components/Login/LoginFormik.tsx"],"names":["React","Field","reduxForm","ThunkLogIn","connect","Redirect","LoginFormik","isAuth","LoginForm","props","handleSubmit","pstp","state","authReducer","ContactForm","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAkCC,SAAlC,QAAkD,YAAlD;AACA,SAAQC,UAAR,QAAyB,iCAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;;AAQA,MAAMC,WAAgC,GAAG,QAAyB;AAAA,MAAxB;AAACH,IAAAA,UAAD;AAAYI,IAAAA;AAAZ,GAAwB;AAC9D,MAAGA,MAAH,EAAW,oBAAO,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACX,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADG,CAAP;AAGH,CALD;;AAOA,MAAMC,SAAqD,GAAIC,KAAD,IAAW;AACrE,sBAAO;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,MAAzB;AAAgC,IAAA,SAAS,EAAC,OAA1C;AAAkD,IAAA,WAAW,EAAC,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CADG,eAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,SAAS,EAAC,OAAjD;AAAyD,IAAA,WAAW,EAAC,UAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CAFG,eAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,YAAZ;AAAyB,IAAA,IAAI,EAAC,UAA9B;AAAyC,IAAA,SAAS,EAAC,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,iBAHG,eAIH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAJG,CAAP;AAQH,CATD;;AAUA,MAAMC,IAAI,GAAIC,KAAD,IAAuB;AAChC,SAAO;AACHL,IAAAA,MAAM,EAAEK,KAAK,CAACC,WAAN,CAAkBN;AADvB,GAAP;AAGH,CAJD;;AAMA,MAAMO,WAAW,GAAGZ,SAAS,CAAgB;AAACa,EAAAA,IAAI,EAAE;AAAP,CAAhB,CAAT,CAA0CP,SAA1C,CAApB;AACA,eAAeJ,OAAO,CAACO,IAAD,EAAO;AAACR,EAAAA;AAAD,CAAP,CAAP,CAA4BG,WAA5B,CAAf","sourcesContent":["import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form'\r\nimport {ThunkLogIn} from \"../../redux/reducer/authReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../../redux/storeRedux\";\r\n\r\n\r\ntype LoginType = {\r\n    ThunkLogIn: (email: string, password: string, rememberMe: boolean) => void\r\n    isAuth: boolean\r\n}\r\nconst LoginFormik: React.FC<LoginType> = ({ThunkLogIn,isAuth}) => {\r\n    if(isAuth) return <Redirect to='/profile'/>\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n    </div>\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormData>> = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div><Field name='email' type=\"text\" component=\"input\" placeholder='email'/></div>\r\n        <div><Field name='password' type=\"password\" component=\"input\" placeholder='Password'/></div>\r\n        <div><Field name='rememberMe' type=\"checkbox\" component=\"input\"/> remember me</div>\r\n        <div>\r\n            <button>Log in</button>\r\n        </div>\r\n    </form>\r\n}\r\nconst pstp = (state: AppStateType)=>{\r\n    return {\r\n        isAuth: state.authReducer.isAuth\r\n    }\r\n}\r\n\r\nconst ContactForm = reduxForm<LoginFormData>({form: 'login'})(LoginForm)\r\nexport default connect(pstp, {ThunkLogIn})(LoginFormik)\r\n"]},"metadata":{},"sourceType":"module"}