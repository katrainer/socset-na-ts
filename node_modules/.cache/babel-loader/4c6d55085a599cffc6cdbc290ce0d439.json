{"ast":null,"code":"var _jsxFileName = \"D:\\\\It-inkubator\\\\socset-na-ts\\\\src\\\\components\\\\Profile\\\\ProfileConteiner.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Profile } from './Profile';\nimport { Preloader } from '../../common/Preloader/Preloader';\nimport { getStatusTC, setProfileUserDataTC, updateStatusTC } from '../../redux/reducer/profilePageReducer';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { WithAuthRedirect } from '../../hoc/withAuthRedirect';\n\nclass ProfileContainer extends React.PureComponent {\n  componentDidMount() {\n    this.props.setProfileUserDataTC(this.props);\n    this.props.getStatusTC(this.props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.preloader && /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(Profile, {\n      profileUserData: this.props.userProfilePage,\n      status: this.props.status,\n      updateStatusTC: this.props.updateStatusTC,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }), \";\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    preloader: state.userPage.preloader,\n    userProfilePage: state.profile.userProfilePage,\n    status: state.profile.status\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  setProfileUserDataTC,\n  getStatusTC,\n  updateStatusTC\n}), withRouter, WithAuthRedirect)(ProfileContainer);","map":{"version":3,"sources":["D:/It-inkubator/socset-na-ts/src/components/Profile/ProfileConteiner.tsx"],"names":["React","connect","Profile","Preloader","getStatusTC","setProfileUserDataTC","updateStatusTC","withRouter","compose","WithAuthRedirect","ProfileContainer","PureComponent","componentDidMount","props","render","preloader","userProfilePage","status","mapStateToProps","state","userPage","profile"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAAQC,SAAR,QAAwB,kCAAxB;AAEA,SACIC,WADJ,EAEIC,oBAFJ,EAGIC,cAHJ,QAKO,wCALP;AAMA,SAA6BC,UAA7B,QAA8C,kBAA9C;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,gBAAR,QAA+B,4BAA/B;;AAEA,MAAMC,gBAAN,SAA+BV,KAAK,CAACW,aAArC,CAA8D;AAC1DC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWR,oBAAX,CAAgC,KAAKQ,KAArC;AACA,SAAKA,KAAL,CAAWT,WAAX,CAAuB,KAAKS,KAA5B;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBAAO,0CACF,KAAKD,KAAL,CAAWE,SAAX,iBAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADtB,eAEH,oBAAC,OAAD;AACI,MAAA,eAAe,EAAE,KAAKF,KAAL,CAAWG,eADhC;AAEI,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAWI,MAFvB;AAGI,MAAA,cAAc,EAAE,KAAKJ,KAAL,CAAWP,cAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,MAAP;AAOH;;AAdyD;;AAiC9D,MAAMY,eAAe,GAAIC,KAAD,IAA6B;AACjD,SAAO;AACHJ,IAAAA,SAAS,EAAEI,KAAK,CAACC,QAAN,CAAeL,SADvB;AAEHC,IAAAA,eAAe,EAAEG,KAAK,CAACE,OAAN,CAAcL,eAF5B;AAGHC,IAAAA,MAAM,EAAEE,KAAK,CAACE,OAAN,CAAcJ;AAHnB,GAAP;AAKH,CAND;;AAOA,eAAeT,OAAO,CAClBP,OAAO,CAACiB,eAAD,EACH;AACIb,EAAAA,oBADJ;AAC0BD,EAAAA,WAD1B;AAEIE,EAAAA;AAFJ,CADG,CADW,EAMlBC,UANkB,EAOlBE,gBAPkB,CAAP,CAQbC,gBARa,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Profile} from './Profile';\r\nimport {Preloader} from '../../common/Preloader/Preloader';\r\nimport {AppRootStateType} from '../../redux/store';\r\nimport {\r\n    getStatusTC,\r\n    setProfileUserDataTC,\r\n    updateStatusTC,\r\n    userProfilePageType\r\n} from '../../redux/reducer/profilePageReducer';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\nimport {WithAuthRedirect} from '../../hoc/withAuthRedirect';\r\n\r\nclass ProfileContainer extends React.PureComponent<PropsType> {\r\n    componentDidMount() {\r\n        this.props.setProfileUserDataTC(this.props)\r\n        this.props.getStatusTC(this.props)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.preloader && <Preloader/>}\r\n            <Profile\r\n                profileUserData={this.props.userProfilePage}\r\n                status={this.props.status}\r\n                updateStatusTC={this.props.updateStatusTC}/>;\r\n        </>\r\n    }\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string,\r\n}\r\ntype MapStateToPropsType = {\r\n    preloader: boolean\r\n    userProfilePage: userProfilePageType | null\r\n    status: string\r\n}\r\ntype MapDispatchToPropsType = {\r\n    setProfileUserDataTC: (param: any) => void\r\n    getStatusTC: (param: any) => void\r\n    updateStatusTC: (status: string) => void\r\n}\r\nexport type ProfilePropsType = MapStateToPropsType & MapDispatchToPropsType\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfilePropsType\r\n\r\nconst mapStateToProps = (state: AppRootStateType) => {\r\n    return {\r\n        preloader: state.userPage.preloader,\r\n        userProfilePage: state.profile.userProfilePage,\r\n        status: state.profile.status\r\n    }\r\n}\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps,\r\n        {\r\n            setProfileUserDataTC, getStatusTC,\r\n            updateStatusTC,\r\n        }),\r\n    withRouter,\r\n    WithAuthRedirect,\r\n)(ProfileContainer)"]},"metadata":{},"sourceType":"module"}