{"ast":null,"code":"import { v1 } from \"uuid\";\nconst initialState = {\n  dialogsData: [{\n    id: v1(),\n    name: 'Nikita',\n    img: 'https://cs13.pikabu.ru/avatars/3395/x3395805-1845289045.png'\n  }, {\n    id: v1(),\n    name: 'Jana',\n    img: 'https://cs13.pikabu.ru/avatars/3395/x3395805-1845289045.png'\n  }, {\n    id: v1(),\n    name: 'Daniil',\n    img: 'https://cs13.pikabu.ru/avatars/3395/x3395805-1845289045.png'\n  }, {\n    id: v1(),\n    name: 'Lecha',\n    img: 'https://cs13.pikabu.ru/avatars/3395/x3395805-1845289045.png'\n  }, {\n    id: v1(),\n    name: 'Lecha',\n    img: 'https://cs13.pikabu.ru/avatars/3395/x3395805-1845289045.png'\n  }, {\n    id: v1(),\n    name: 'Lecha',\n    img: 'https://cs13.pikabu.ru/avatars/3395/x3395805-1845289045.png'\n  }],\n  messagesData: [{\n    id: v1(),\n    message: 'yo'\n  }, {\n    id: v1(),\n    message: 'yoyo'\n  }, {\n    id: v1(),\n    message: 'yoyoyo'\n  }, {\n    id: v1(),\n    message: 'yoyoyoyo'\n  }, {\n    id: v1(),\n    message: 'yoyoyoyo'\n  }, {\n    id: v1(),\n    message: 'yoyoyoyo'\n  }],\n  newMessageText: ''\n};\nexport const messagesPageReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  debugger;\n\n  switch (action.type) {\n    case \"SET-MESSAGE-TEXT\":\n      {\n        return { ...state,\n          newMessageText: action.text\n        };\n      }\n\n    case \"SET-NEW-MESSAGE-CLICK\":\n      {\n        const message = {\n          id: v1(),\n          message: state.newMessageText\n        };\n        return { ...state,\n          messagesData: [message, ...state.messagesData],\n          newMessageText: ''\n        };\n      }\n\n    default:\n      return { ...state\n      };\n  }\n};\nexport const setMessageText = text => {\n  return {\n    type: 'SET-MESSAGE-TEXT',\n    text\n  };\n};\nexport const setNewMessageText = () => {\n  return {\n    type: 'SET-NEW-MESSAGE-CLICK'\n  };\n};","map":{"version":3,"sources":["D:/It-inkubator/socset-na-ts/src/redux/reducer/messagesPageReducer.ts"],"names":["v1","initialState","dialogsData","id","name","img","messagesData","message","newMessageText","messagesPageReducer","state","action","type","text","setMessageText","setNewMessageText"],"mappings":"AAAA,SAAQA,EAAR,QAAiB,MAAjB;AAiBA,MAAMC,YAA8B,GAAG;AACnCC,EAAAA,WAAW,EAAE,CACT;AAACC,IAAAA,EAAE,EAAEH,EAAE,EAAP;AAAWI,IAAAA,IAAI,EAAE,QAAjB;AAA2BC,IAAAA,GAAG,EAAE;AAAhC,GADS,EAET;AAACF,IAAAA,EAAE,EAAEH,EAAE,EAAP;AAAWI,IAAAA,IAAI,EAAE,MAAjB;AAAyBC,IAAAA,GAAG,EAAE;AAA9B,GAFS,EAGT;AAACF,IAAAA,EAAE,EAAEH,EAAE,EAAP;AAAWI,IAAAA,IAAI,EAAE,QAAjB;AAA2BC,IAAAA,GAAG,EAAE;AAAhC,GAHS,EAIT;AAACF,IAAAA,EAAE,EAAEH,EAAE,EAAP;AAAWI,IAAAA,IAAI,EAAE,OAAjB;AAA0BC,IAAAA,GAAG,EAAE;AAA/B,GAJS,EAKT;AAACF,IAAAA,EAAE,EAAEH,EAAE,EAAP;AAAWI,IAAAA,IAAI,EAAE,OAAjB;AAA0BC,IAAAA,GAAG,EAAE;AAA/B,GALS,EAMT;AAACF,IAAAA,EAAE,EAAEH,EAAE,EAAP;AAAWI,IAAAA,IAAI,EAAE,OAAjB;AAA0BC,IAAAA,GAAG,EAAE;AAA/B,GANS,CADsB;AASnCC,EAAAA,YAAY,EAAE,CACV;AAACH,IAAAA,EAAE,EAAEH,EAAE,EAAP;AAAWO,IAAAA,OAAO,EAAE;AAApB,GADU,EAEV;AAACJ,IAAAA,EAAE,EAAEH,EAAE,EAAP;AAAWO,IAAAA,OAAO,EAAE;AAApB,GAFU,EAGV;AAACJ,IAAAA,EAAE,EAAEH,EAAE,EAAP;AAAWO,IAAAA,OAAO,EAAE;AAApB,GAHU,EAIV;AAACJ,IAAAA,EAAE,EAAEH,EAAE,EAAP;AAAWO,IAAAA,OAAO,EAAE;AAApB,GAJU,EAKV;AAACJ,IAAAA,EAAE,EAAEH,EAAE,EAAP;AAAWO,IAAAA,OAAO,EAAE;AAApB,GALU,EAMV;AAACJ,IAAAA,EAAE,EAAEH,EAAE,EAAP;AAAWO,IAAAA,OAAO,EAAE;AAApB,GANU,CATqB;AAiBnCC,EAAAA,cAAc,EAAE;AAjBmB,CAAvC;AAoBA,OAAO,MAAMC,mBAAmB,GAAG,YAAmF;AAAA,MAAlFC,KAAkF,uEAAxDT,YAAwD;AAAA,MAA1CU,MAA0C;AAClH;;AACA,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,kBAAL;AAAyB;AACrB,eAAO,EAAC,GAAGF,KAAJ;AAAWF,UAAAA,cAAc,EAAEG,MAAM,CAACE;AAAlC,SAAP;AACH;;AACD,SAAK,uBAAL;AAA8B;AAC1B,cAAMN,OAAO,GAAG;AAACJ,UAAAA,EAAE,EAAEH,EAAE,EAAP;AAAWO,UAAAA,OAAO,EAAEG,KAAK,CAACF;AAA1B,SAAhB;AACA,eAAO,EAAC,GAAGE,KAAJ;AAAWJ,UAAAA,YAAY,EAAE,CAACC,OAAD,EAAU,GAAGG,KAAK,CAACJ,YAAnB,CAAzB;AAA2DE,UAAAA,cAAc,EAAC;AAA1E,SAAP;AACH;;AACD;AACI,aAAO,EAAC,GAAGE;AAAJ,OAAP;AATR;AAWH,CAbM;AAiBP,OAAO,MAAMI,cAAc,GAAID,IAAD,IAAkB;AAC5C,SAAO;AACHD,IAAAA,IAAI,EAAE,kBADH;AAEHC,IAAAA;AAFG,GAAP;AAIH,CALM;AAQP,OAAO,MAAME,iBAAiB,GAAG,MAAM;AACnC,SAAO;AACHH,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJM","sourcesContent":["import {v1} from \"uuid\";\r\n\r\nexport type messagesPageType = {\r\n    dialogsData: DialogsDataProps[]\r\n    messagesData: MessagesDataProps[]\r\n    newMessageText: string\r\n}\r\nexport type DialogsDataProps = {\r\n    id: string\r\n    name: string\r\n    img: string\r\n}\r\nexport type MessagesDataProps = {\r\n    id: string\r\n    message: string\r\n}\r\n\r\nconst initialState: messagesPageType = {\r\n    dialogsData: [\r\n        {id: v1(), name: 'Nikita', img: 'https://cs13.pikabu.ru/avatars/3395/x3395805-1845289045.png'},\r\n        {id: v1(), name: 'Jana', img: 'https://cs13.pikabu.ru/avatars/3395/x3395805-1845289045.png'},\r\n        {id: v1(), name: 'Daniil', img: 'https://cs13.pikabu.ru/avatars/3395/x3395805-1845289045.png'},\r\n        {id: v1(), name: 'Lecha', img: 'https://cs13.pikabu.ru/avatars/3395/x3395805-1845289045.png'},\r\n        {id: v1(), name: 'Lecha', img: 'https://cs13.pikabu.ru/avatars/3395/x3395805-1845289045.png'},\r\n        {id: v1(), name: 'Lecha', img: 'https://cs13.pikabu.ru/avatars/3395/x3395805-1845289045.png'},\r\n    ],\r\n    messagesData: [\r\n        {id: v1(), message: 'yo'},\r\n        {id: v1(), message: 'yoyo'},\r\n        {id: v1(), message: 'yoyoyo'},\r\n        {id: v1(), message: 'yoyoyoyo'},\r\n        {id: v1(), message: 'yoyoyoyo'},\r\n        {id: v1(), message: 'yoyoyoyo'},\r\n    ],\r\n    newMessageText: '',\r\n}\r\n\r\nexport const messagesPageReducer = (state: messagesPageType = initialState, action: generalType): messagesPageType => {\r\n    debugger\r\n    switch (action.type) {\r\n        case \"SET-MESSAGE-TEXT\": {\r\n            return {...state, newMessageText: action.text}\r\n        }\r\n        case \"SET-NEW-MESSAGE-CLICK\": {\r\n            const message = {id: v1(), message: state.newMessageText,}\r\n            return {...state, messagesData: [message, ...state.messagesData], newMessageText:''}\r\n        }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\ntype generalType = setMessageTextACType|setNewMessageTextACType\r\ntype setMessageTextACType = ReturnType<typeof setMessageText>\r\nexport const setMessageText = (text: string) => {\r\n    return {\r\n        type: 'SET-MESSAGE-TEXT',\r\n        text\r\n    } as const\r\n}\r\n\r\ntype setNewMessageTextACType = ReturnType<typeof setNewMessageText>\r\nexport const setNewMessageText = () => {\r\n    return {\r\n        type: 'SET-NEW-MESSAGE-CLICK'\r\n    } as const\r\n}"]},"metadata":{},"sourceType":"module"}