{"ast":null,"code":"var _jsxFileName = \"D:\\\\It-inkubator\\\\socset-na-ts\\\\src\\\\components\\\\Profile\\\\ProfileInfo\\\\ProfileInfo.tsx\";\nimport React from 'react';\nimport { ProfileStatus } from './ProfileStatus/ProfileStatus';\nimport { useSelector } from 'react-redux';\nexport const ProfileInfo = React.memo(_ref => {\n  let {\n    profileUserData,\n    status,\n    updateStatusTC\n  } = _ref;\n  const ownerPage = useSelector(state => {\n    var _state$profile$userPr;\n\n    return (_state$profile$userPr = state.profile.userProfilePage) === null || _state$profile$userPr === void 0 ? void 0 : _state$profile$userPr.userId;\n  });\n  const owner = useSelector(state => state.login.id);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, profileUserData && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 34\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: profileUserData.photos.small,\n    alt: \"\\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0442\\u043E\\u0433\\u043E, \\u0447\\u0435\\u0433\\u043E \\u043D\\u0435\\u0442\\u0443\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 39\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, profileUserData.fullName), /*#__PURE__*/React.createElement(ProfileStatus, {\n    value: status,\n    updateStatusTC: updateStatusTC,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  })), ownerPage === owner && /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 37\n    }\n  }));\n});","map":{"version":3,"sources":["D:/It-inkubator/socset-na-ts/src/components/Profile/ProfileInfo/ProfileInfo.tsx"],"names":["React","ProfileStatus","useSelector","ProfileInfo","memo","profileUserData","status","updateStatusTC","ownerPage","state","profile","userProfilePage","userId","owner","login","id","photos","small","fullName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,aAAR,QAA4B,+BAA5B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AASA,OAAO,MAAMC,WAAgC,GAAGH,KAAK,CAACI,IAAN,CAAW,QAKjD;AAAA,MAJN;AACIC,IAAAA,eADJ;AAEIC,IAAAA,MAFJ;AAGIC,IAAAA;AAHJ,GAIM;AACN,QAAMC,SAAS,GAAGN,WAAW,CAAuCO,KAAK;AAAA;;AAAA,oCAAIA,KAAK,CAACC,OAAN,CAAcC,eAAlB,0DAAI,sBAA+BC,MAAnC;AAAA,GAA5C,CAA7B;AACA,QAAMC,KAAK,GAAGX,WAAW,CAAkCO,KAAK,IAAIA,KAAK,CAACK,KAAN,CAAYC,EAAvD,CAAzB;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,eAAe,iBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAK,IAAA,GAAG,EAAEA,eAAe,CAACW,MAAhB,CAAuBC,KAAjC;AAAwC,IAAA,GAAG,EAAC,gJAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,eACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIZ,eAAe,CAACa,QAApB,CADiB,eAEjB,oBAAC,aAAD;AACI,IAAA,KAAK,EAAEZ,MADX;AAEI,IAAA,cAAc,EAAEC,cAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFiB,CADzB,EAOKC,SAAS,KAAKK,KAAd,iBAAuB;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAP5B,CADJ;AAWH,CAnB+C,CAAzC","sourcesContent":["import React from 'react';\r\nimport {userProfilePageType} from '../../../redux/reducer/profilePageReducer';\r\nimport {ProfileStatus} from './ProfileStatus/ProfileStatus';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../redux/store';\r\n\r\n\r\ntype PropsType = {\r\n    profileUserData: userProfilePageType | null,\r\n    status: string\r\n    updateStatusTC: (status: string) => void\r\n}\r\nexport const ProfileInfo: React.FC<PropsType> = React.memo((\r\n    {\r\n        profileUserData,\r\n        status,\r\n        updateStatusTC,\r\n    }) => {\r\n    const ownerPage = useSelector<AppRootStateType, number | undefined>(state => state.profile.userProfilePage?.userId)\r\n    const owner = useSelector<AppRootStateType, number | null>(state => state.login.id)\r\n    return (\r\n        <div>\r\n            {profileUserData && (<div><img src={profileUserData.photos.small} alt=\"изображение того, чего нету\"/>\r\n                <p>{profileUserData.fullName}</p>\r\n                <ProfileStatus\r\n                    value={status}\r\n                    updateStatusTC={updateStatusTC}/>\r\n            </div>)}\r\n            {ownerPage === owner && <input type=\"file\"/>}\r\n        </div>\r\n    )\r\n})"]},"metadata":{},"sourceType":"module"}