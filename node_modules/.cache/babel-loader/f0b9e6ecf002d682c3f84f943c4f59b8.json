{"ast":null,"code":"var _jsxFileName = \"D:\\\\It-inkubator\\\\socset-na-ts\\\\src\\\\components\\\\Profile\\\\ProfileInfo\\\\ProfileStatus\\\\ProfileStatus.tsx\";\nimport React, { useEffect, useState } from 'react';\nexport const ProfileStatus = _ref => {\n  let {\n    value,\n    updateStatusTC\n  } = _ref;\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(value);\n  useEffect(() => {}, []);\n\n  const onBlurHandler = () => {\n    updateStatusTC(status);\n    setEditMode(false);\n  };\n\n  const onDoubleClickHandler = () => setEditMode(true);\n\n  const onChangeHandler = e => setStatus(e.currentTarget.value);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, editMode ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: status,\n    autoFocus: true,\n    onBlur: onBlurHandler,\n    onChange: onChangeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(\"span\", {\n    onDoubleClick: onDoubleClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, value || 'NO STATUS'));\n};","map":{"version":3,"sources":["D:/It-inkubator/socset-na-ts/src/components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx"],"names":["React","useEffect","useState","ProfileStatus","value","updateStatusTC","editMode","setEditMode","status","setStatus","onBlurHandler","onDoubleClickHandler","onChangeHandler","e","currentTarget"],"mappings":";AAAA,OAAOA,KAAP,IAA4BC,SAA5B,EAAuCC,QAAvC,QAAsD,OAAtD;AAOA,OAAO,MAAMC,aAA0C,GAAG,QAIhD;AAAA,MAHN;AACIC,IAAAA,KADJ;AAEIC,IAAAA;AAFJ,GAGM;AAEN,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAACE,KAAD,CAApC;AACAH,EAAAA,SAAS,CAAC,MAAM,CACX,CADI,EACF,EADE,CAAT;;AAGA,QAAMS,aAAa,GAAG,MAAM;AACxBL,IAAAA,cAAc,CAACG,MAAD,CAAd;AACAD,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAHD;;AAIA,QAAMI,oBAAoB,GAAG,MAAMJ,WAAW,CAAC,IAAD,CAA9C;;AACA,QAAMK,eAAe,GAAIC,CAAD,IAAsCJ,SAAS,CAACI,CAAC,CAACC,aAAF,CAAgBV,KAAjB,CAAvE;;AACA,sBAAO,0CACFE,QAAQ,gBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,KAAK,EAAEE,MAAd;AAAsB,IAAA,SAAS,MAA/B;AAAgC,IAAA,MAAM,EAAEE,aAAxC;AAAuD,IAAA,QAAQ,EAAEE,eAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADG,gBAIH;AAAM,IAAA,aAAa,EAAED,oBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4CP,KAAK,IAAI,WAArD,CALH,CAAP;AAOH,CAxBM","sourcesContent":["import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\ntype ProfileStatusType = {\r\n    value: string\r\n    updateStatusTC: (status: string) => void\r\n}\r\n\r\nexport const ProfileStatus: React.FC<ProfileStatusType> = (\r\n    {\r\n        value,\r\n        updateStatusTC,\r\n    }) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(value)\r\n    useEffect(() => {\r\n        }, []\r\n    )\r\n    const onBlurHandler = () => {\r\n        updateStatusTC(status)\r\n        setEditMode(false)\r\n    }\r\n    const onDoubleClickHandler = () => setEditMode(true)\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => setStatus(e.currentTarget.value)\r\n    return <>\r\n        {editMode\r\n            ? <div>\r\n                <input value={status} autoFocus onBlur={onBlurHandler} onChange={onChangeHandler}/>\r\n            </div>\r\n            : <span onDoubleClick={onDoubleClickHandler}>{value || 'NO STATUS'}</span>}\r\n    </>\r\n}"]},"metadata":{},"sourceType":"module"}