{"ast":null,"code":"var _jsxFileName = \"D:\\\\It-inkubator\\\\socset-na-ts\\\\src\\\\components\\\\Friends\\\\Friends.tsx\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport React, { useEffect } from 'react';\nimport { changeCurrentPageTC } from '../../redux/reducer/usersPageReducer';\nexport const Friends = () => {\n  const isAuth = useSelector(state => state.login.isAuth);\n  const users = useSelector(state => state.userPage.users);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(changeCurrentPageTC(1, 100, true));\n  }, [users]);\n  if (!isAuth) return /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 25\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }\n  }, users.map(t => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: t.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    });\n  }));\n};","map":{"version":3,"sources":["D:/It-inkubator/socset-na-ts/src/components/Friends/Friends.tsx"],"names":["useDispatch","useSelector","Redirect","React","useEffect","changeCurrentPageTC","Friends","isAuth","state","login","users","userPage","dispatch","map","t","id"],"mappings":";AAAA,SAAQA,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AAEA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,SAAQC,mBAAR,QAAkC,sCAAlC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AACzB,QAAMC,MAAM,GAAGN,WAAW,CAA4BO,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYF,MAAjD,CAA1B;AACA,QAAMG,KAAK,GAAGT,WAAW,CAA+BO,KAAK,IAAIA,KAAK,CAACG,QAAN,CAAeD,KAAvD,CAAzB;AACA,QAAME,QAAQ,GAAGZ,WAAW,EAA5B;AAEAI,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ,CAACP,mBAAmB,CAAC,CAAD,EAAI,GAAJ,EAAS,IAAT,CAApB,CAAR;AACH,GAFQ,EAEN,CAACK,KAAD,CAFM,CAAT;AAGA,MAAI,CAACH,MAAL,EAAa,oBAAO,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFG,KAAK,CAACG,GAAN,CAAUC,CAAC,IAAE;AACV,wBACI;AAAK,MAAA,GAAG,EAAEA,CAAC,CAACC,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH,GANA,CADE,CAAP;AASH,CAlBM","sourcesContent":["import {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../redux/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport React, {useEffect} from 'react';\r\nimport {UserType} from '../../api/userApi';\r\nimport {changeCurrentPageTC} from '../../redux/reducer/usersPageReducer';\r\n\r\nexport const Friends = () => {\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n    const users = useSelector<AppRootStateType, UserType[]>(state => state.userPage.users)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(changeCurrentPageTC(1, 100, true))\r\n    }, [users])\r\n    if (!isAuth) return <Redirect to=\"/login\"/>\r\n    return <div>\r\n        {users.map(t=>{\r\n            return(\r\n                <div key={t.id}>\r\n\r\n                </div>\r\n            )\r\n        })}\r\n    </div>\r\n}"]},"metadata":{},"sourceType":"module"}