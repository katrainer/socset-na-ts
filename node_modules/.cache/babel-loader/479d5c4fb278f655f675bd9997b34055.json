{"ast":null,"code":"var _jsxFileName = \"D:\\\\It-inkubator\\\\socset-na-ts\\\\src\\\\common\\\\Paginator\\\\Paginator.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport s from './Pagination.module.css';\nexport const Paginator = React.memo(_ref => {\n  let {\n    totalCount,\n    pageCount,\n    callback\n  } = _ref;\n  const [curPage, setCurPage] = useState(1);\n  const totalPages = Math.ceil(totalCount / pageCount);\n  const pages = [];\n\n  function createPages(pages, pagesCount, currentPage) {\n    if (pagesCount > 10) {\n      if (currentPage > 5) {\n        for (let i = currentPage - 4; i <= currentPage + 5; i++) {\n          pages.push(i);\n          if (i === pagesCount) break;\n        }\n      } else {\n        for (let i = 1; i <= 10; i++) {\n          pages.push(i);\n          if (i === pagesCount) break;\n        }\n      }\n    } else {\n      for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n      }\n    }\n  }\n\n  createPages(pages, totalPages, curPage);\n\n  const toFirstPage = () => setCurPage(1);\n\n  const toLastPage = () => setCurPage(totalPages);\n\n  const [test, setTest] = useState(null);\n  useEffect(() => {\n    if (test) {\n      callback(curPage);\n    }\n\n    setTest(1);\n  }, [curPage]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.pages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: toFirstPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \" \", '<<', \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => setCurPage(curPage - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, '<', \" \"), pages.map((page, index) => /*#__PURE__*/React.createElement(\"span\", {\n    key: index,\n    className: curPage === page ? s.currentPage : s.page,\n    onClick: () => setCurPage(page),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 45\n    }\n  }, page, \" \")), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => setCurPage(curPage + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \" \", '>', \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: toLastPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, '>>', \" \"));\n});","map":{"version":3,"sources":["D:/It-inkubator/socset-na-ts/src/common/Paginator/Paginator.tsx"],"names":["React","useEffect","useState","s","Paginator","memo","totalCount","pageCount","callback","curPage","setCurPage","totalPages","Math","ceil","pages","createPages","pagesCount","currentPage","i","push","toFirstPage","toLastPage","test","setTest","map","page","index"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport s from './Pagination.module.css'\r\n\r\ntype PaginatorPropsType = {\r\n    totalCount: number\r\n    pageCount: number\r\n    callback: (page: number) => void\r\n    currentPage: number\r\n}\r\n\r\nexport const Paginator: React.FC<PaginatorPropsType> =\r\n    React.memo(({\r\n                    totalCount,\r\n                    pageCount,\r\n                    callback,\r\n                }) => {\r\n        const [curPage, setCurPage] = useState(1)\r\n        const totalPages = Math.ceil(totalCount / pageCount)\r\n        const pages = [] as number[]\r\n\r\n        function createPages(pages: number[], pagesCount: number, currentPage: number) {\r\n            if (pagesCount > 10) {\r\n                if (currentPage > 5) {\r\n                    for (let i = currentPage - 4; i <= currentPage + 5; i++) {\r\n                        pages.push(i)\r\n                        if (i === pagesCount) break\r\n                    }\r\n                } else {\r\n                    for (let i = 1; i <= 10; i++) {\r\n                        pages.push(i)\r\n                        if (i === pagesCount) break\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = 1; i <= pagesCount; i++) {\r\n                    pages.push(i)\r\n                }\r\n            }\r\n        }\r\n\r\n        createPages(pages, totalPages, curPage)\r\n\r\n        const toFirstPage = () => setCurPage(1)\r\n        const toLastPage = () => setCurPage(totalPages)\r\n\r\n        const [test, setTest] = useState<null | number>(null)\r\n        useEffect(() => {\r\n            if (test) {\r\n                callback(curPage)\r\n            }\r\n            setTest(1)\r\n        }, [curPage])\r\n\r\n        return (\r\n            <div className={s.pages}>\r\n                <span onClick={toFirstPage}> {'<<'} </span>\r\n                <span onClick={() => setCurPage(curPage - 1)}>{'<'} </span>\r\n                {pages.map((page, index) => <span\r\n                    key={index}\r\n                    className={curPage === page ? s.currentPage : s.page}\r\n                    onClick={() => setCurPage(page)}>{page} </span>)}\r\n                <span onClick={() => setCurPage(curPage + 1)}> {'>'} </span>\r\n                <span onClick={toLastPage}>{'>>'} </span>\r\n            </div>\r\n        );\r\n    });"]},"metadata":{},"sourceType":"module"}