{"version":3,"sources":["common/commonReducer.ts","utils/util-error.ts","api/apiConfig/apiConfig.ts","api/authApi.ts","redux/reducer/authReducer.ts","redux/reducer/profilePageReducer.ts","components/Navbar/Navbar.tsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx","api/profileApi.ts","components/Profile/ProfileInfo/Contacts/Contacts.tsx","components/Profile/ProfileInfo/Settings/Settings.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsConteiner.tsx","components/Profile/Profile.tsx","common/Preloader/Preloader.tsx","hoc/withAuthRedirect.tsx","redux/reducer/appReducer.ts","components/Profile/ProfileConteiner.tsx","components/Login/Login.tsx","redux/reducer/usersPageReducer.ts","components/Header/Header.tsx","api/userApi.ts","redux/reducer/messagesPageReducer.ts","components/Friends/Friends.tsx","common/Paginator/Paginator.tsx","components/Users/Users.tsx","components/Dialogs/Dialogs.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx","components/Navbar/Navbar.module.css","components/Users/Users.module.css","components/Dialogs/Dialogs.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/Contacts/Contacts.module.css","components/Profile/ProfileInfo/Settings/Settings.module.css","components/Profile/MyPosts/MyPost.module.css","components/Friends/Friends.module.css","App.module.css","common/Paginator/Pagination.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","assets/img/preloader.gif","components/Login/Login.module.css","components/Header/Header.module.css"],"names":["enumCommonActionType","errorResponse","e","axios","isAxiosError","response","errorMessage","data","error","console","log","instance","create","baseURL","headers","API-KEY","withCredentials","authAPI","get","email","password","rememberMe","post","delete","enumAuthActionType","initialState","preloader","changePreloaderAC","type","changePreloader","payload","enumProfileActionType","id","login","isAuth","setAuthDataAC","setAuthData","Object","objectSpread2","setAuthDataTC","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","res","_res$data$data","wrap","_context","prev","next","sent","abrupt","t0","stop","_x","apply","this","arguments","Navbar","useSelector","state","useDispatch","react_default","createElement","className","s","navbar","react_router_dom","exact","to","activeClassName","active","ti_index_esm","index_esm","gi_index_esm","onClick","_ref3","_callee3","_context3","resultCode","_x3","style","display","ProfileStatus","React","memo","value","updateStatusTC","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","_useState4","status","setStatus","autoFocus","onBlur","onChange","currentTarget","fontSize","wordBreak","onDoubleClick","profileAPI","userId","put","photo","form","FormData","append","Content-Type","then","postsData","v1","message","likeCount","userProfilePage","setProfileUserDataAC","setProfileUserData","setStatusAC","Contacts","hide","setHide","profileUserData","profile","mainContainer","buttonContainer","button","aboutMe","contacts","infoContainer","github","vk","instagram","website","facebook","twitter","Settings","formik","useFormik","initialValues","fullName","onSubmit","values","mainData","_ref5","_callee5","getState","profileData","_context5","lookingForAJobDescription","alert","messages","_x7","_x8","updateProfileInfoTC","handleSubmit","settings","assign","placeholder","getFieldProps","ProfileInfo","_profileUserData$phot","ownerPage","_state$profile$userPr","owner","profileImgContainer","src","photos","small","large","alt","nameContainer","Fragment","name","target","files","_ref4","_callee4","_context4","updatePhotos","_x6","fileInput","htmlFor","Contacts_Contacts","Settings_Settings","Post","MyPosts","setNewPostClickAC","posts","map","p","key","resetForm","newPostContainer","formContainer","rows","handleChange","MyPostsContainer","connect","setNewPostClick","Profile","Preloader","preloaderImg","width","mstp","EnumAppActionType","ProfileContainer","props","setProfileUserDataTC","getStatusTC","Preloader_Preloader","PureComponent","compose","userPage","param","match","params","_x2","_ref2","_callee2","_context2","_x4","_x5","withRouter","Component","restProps","objectWithoutProperties","_excluded","react_router","Login","ThunkLogIn","validate","errors","test","length","allContainer","href","touched","color","checked","enumUsersPageActionType","initialized","Header","header","usersAPI","page","count","par","term","undefined","friend","enumMessagesActionType","users","pageSize","totalUsersCount","currentPage","followingInProgress","subscribeAC","subscribe","unSubscribeAC","unSubscribe","setUsersAC","setUsers","setTotalUsersCountAC","setTotalUsersCount","toggleFollowingInProgressAC","isFetching","toggleFollowingInProgress","setFriendsTC","items","totalCount","unSubscribeTC","subscribeTC","Friends","useEffect","t","friendContainer","imgContainer","textContainer","followed","Paginator","pageCount","callback","curPage","setCurPage","totalPages","Math","ceil","pages","pagesCount","i","push","createPages","setTest","index","Users","changeCurrentPageHandler","useCallback","changeCurrentPage","setUsersTC","container","containerUsers","containerUser","imgAndName","statusAndName","disabled","some","Dialogs","usersForDialogs","slice","messagesData","time","_t$photos","contentContainer","App","initializeTC","Header_Header","Navbar_Navbar","path","render","Dialogs_Dialogs","ProfileConteiner","Users_Users","Login_Login","Friends_Friends","AppReducer","initializedSuccess","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","concat","toConsumableArray","filter","common","store","createStore","applyMiddleware","thunk","window","ReactDOM","es","src_App","document","getElementById","module","exports","timeContainer"],"mappings":"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","file":"static/js/main.693caa98.chunk.js","sourcesContent":["export enum enumCommonActionType {\r\n    changePreloader = 'COMMON/PRELOADER'\r\n}\r\n\r\nconst initialState: initialStateType = {\r\n    preloader: false\r\n}\r\n\r\nexport const commonReducer = (state: initialStateType = initialState, action: CommonActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case enumCommonActionType.changePreloader:\r\n            return {...state, ...action.payload}\r\n        default :\r\n            return {...state}\r\n    }\r\n}\r\n\r\n//action\r\nexport const changePreloaderAC = (preloader: boolean) => {\r\n    return {\r\n        type: enumCommonActionType.changePreloader,\r\n        payload: {preloader}\r\n    } as const\r\n}\r\n\r\n//thunk\r\n\r\n\r\n//type\r\nexport type initialStateType = { preloader: boolean }\r\nexport type preloaderACType = ReturnType<typeof changePreloaderAC>\r\nexport type CommonActionType = preloaderACType","import axios from 'axios';\r\n\r\nexport const errorResponse = (e: any) => {\r\n    if (axios.isAxiosError(e) && e.response) {\r\n        const errorMessage = e.response.data.error;\r\n        console.log(errorMessage)\r\n    }\r\n}","import axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {'API-KEY': '9359a22e-adad-4c18-8f69-1475882f26c8'},\r\n    withCredentials: true\r\n})","import {instance} from './apiConfig/apiConfig';\r\nimport {AxiosResponse} from 'axios';\r\n\r\n\r\nexport const authAPI = {\r\n    setAuthData() {\r\n        return instance.get<ResponseType<{\r\n            id: number,\r\n            email: string,\r\n            login: string,\r\n        }>>('auth/me')\r\n    },\r\n    setLogin(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<{ email: string, password: string, rememberMe: boolean }, AxiosResponse<ResponseType<{ userId: number }>>>\r\n        ('auth/login', {email, password, rememberMe,})\r\n    },\r\n    outLogin() {\r\n        return instance.delete<ResponseType>('auth/login')\r\n    }\r\n}\r\ntype ResponseType<D = {}> = {\r\n    resultCode: number\r\n    messages: Array<string>\r\n    fieldsErrors: Array<string>\r\n    data: D\r\n}","import {AppThunk} from '../store';\r\nimport {errorResponse} from '../../utils/util-error';\r\nimport {authAPI} from '../../api/authApi';\r\nimport {changePreloaderAC} from '../../common/commonReducer';\r\n\r\nexport enum enumAuthActionType {\r\n    setAuthData = 'AUTH/PROFILE/SET-NEW-POST-CLICK',\r\n}\r\n\r\nconst initialState = {\r\n    id: 0,\r\n    email: '',\r\n    login: '',\r\n    isAuth: false,\r\n}\r\n\r\nexport const authReducer = (state: initialStateType = initialState, action: LoginActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case enumAuthActionType.setAuthData:\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n//action\r\nexport const setAuthDataAC = (data: initialStateType) => {\r\n    return {\r\n        type: enumAuthActionType.setAuthData,\r\n        payload: {...data}\r\n    }\r\n}\r\n\r\n//thunk\r\nexport const setAuthDataTC = (): AppThunk => async dispatch => {\r\n    dispatch(changePreloaderAC(true))\r\n    try {\r\n        const res = await authAPI.setAuthData()\r\n        const {id, email, login} = res.data.data\r\n        if (id) dispatch(setAuthDataAC({id, email, login, isAuth: true}))\r\n        return 'aaa'\r\n    } catch (e) {\r\n        errorResponse(e)\r\n    }\r\n    dispatch(changePreloaderAC(false))\r\n}\r\nexport const logInTC = (email: string, password: string, rememberMe: boolean): AppThunk =>\r\n    async dispatch => {\r\n        dispatch(changePreloaderAC(true))\r\n        try {\r\n            const res = await authAPI.setLogin(email, password, rememberMe)\r\n            if (res.data.resultCode === 0) dispatch(setAuthDataTC())\r\n        } catch (e) {\r\n            errorResponse(e)\r\n        }\r\n        dispatch(changePreloaderAC(false))\r\n    }\r\nexport const logOutTC = (): AppThunk => async dispatch => {\r\n    dispatch(changePreloaderAC(true))\r\n    try {\r\n        const res = await authAPI.outLogin()\r\n        if (res.data.resultCode === 0) dispatch(setAuthDataAC({id: 0, email: '', login: '', isAuth: false}))\r\n    } catch (e) {\r\n        errorResponse(e)\r\n    }\r\n    dispatch(changePreloaderAC(false))\r\n}\r\n\r\n//type\r\ntype initialStateType = typeof initialState\r\nexport type LoginActionType = ReturnType<typeof setAuthDataAC>\r\n\r\n\r\n","import {v1} from 'uuid';\r\nimport {AppThunk} from '../store';\r\nimport {profileAPI, ProfileDataType} from '../../api/profileApi';\r\nimport {changePreloaderAC, enumCommonActionType, preloaderACType} from '../../common/commonReducer';\r\nimport {errorResponse} from '../../utils/util-error';\r\n\r\nexport enum enumProfileActionType {\r\n    setNewPostClick = 'PROFILE/SET-NEW-POST-CLICK',\r\n    setProfileUserData = 'PROFILE/SET-PROFILE-USER-DATA',\r\n    setStatus = 'PROFILE/SET-STATUS',\r\n    updatePhotos = 'PROFILE/UPDATE-PHOTOS',\r\n}\r\n\r\nconst initialState = {\r\n    postsData: [\r\n        {id: v1(), message: 'Memento mori', likeCount: 12},\r\n        {id: v1(), message: 'How are you guys?', likeCount: 212},\r\n        {id: v1(), message: 'Hello world!', likeCount: 1212},\r\n    ],\r\n    userProfilePage: {} as ProfileDataType,\r\n    preloader: false,\r\n    status: '',\r\n}\r\nexport const profilePageReducer = (state: initialStateType = initialState, action: ProfileActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case enumProfileActionType.setNewPostClick:\r\n            return {\r\n                ...state,\r\n                postsData: [action.payload, ...state.postsData]\r\n            }\r\n        case enumProfileActionType.setProfileUserData:\r\n        case enumCommonActionType.changePreloader:\r\n        case enumProfileActionType.setStatus:\r\n            return {...state, ...action.payload}\r\n        case enumProfileActionType.updatePhotos:\r\n            return {...state, userProfilePage: {...state.userProfilePage, ...action.payload.photos}}\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\n//action\r\nexport const setNewPostClickAC = (message: string) => {\r\n    return {\r\n        type: enumProfileActionType.setNewPostClick,\r\n        payload: {message, likeCount: 0, id: v1()},\r\n    } as const\r\n}\r\nexport const setProfileUserDataAC = (userProfilePage: ProfileDataType) => {\r\n    return {\r\n        type: enumProfileActionType.setProfileUserData,\r\n        payload: {userProfilePage}\r\n    } as const\r\n}\r\nexport const setStatusAC = (status: string) => {\r\n    return {\r\n        type: enumProfileActionType.setStatus,\r\n        payload: {status},\r\n    } as const\r\n}\r\nconst updatePhotosAC = (photos: { small: string, large: string }) => {\r\n    return {\r\n        type: enumProfileActionType.updatePhotos,\r\n        payload: {photos}\r\n    } as const\r\n}\r\n\r\n\r\n//thunk\r\nexport const setProfileUserDataTC = (param: any): AppThunk =>\r\n    async (dispatch, getState) => {\r\n        dispatch(changePreloaderAC(true))\r\n        let userId = param.match.params.userId\r\n        if (!userId) {\r\n            const id = getState().login.id\r\n            userId = id\r\n        }\r\n        try {\r\n            const res = await profileAPI.getProfileUserData(userId)\r\n            dispatch(setProfileUserDataAC(res.data))\r\n        } catch (e) {\r\n            errorResponse(e)\r\n        }\r\n        dispatch(changePreloaderAC(false))\r\n    }\r\nexport const getStatusTC = (param: any): AppThunk =>\r\n    async (dispatch, getState) => {\r\n        dispatch(changePreloaderAC(true))\r\n        let userId = param.match.params.userId\r\n        if (!userId) {\r\n            const id = getState().login.id\r\n            userId = id\r\n        }\r\n        try {\r\n            const res = await profileAPI.getProfileStatus(userId)\r\n            dispatch(setStatusAC(res.data))\r\n        } catch (e) {\r\n            errorResponse(e)\r\n        }\r\n        dispatch(changePreloaderAC(false))\r\n    }\r\nexport const updateStatusTC = (status: string): AppThunk =>\r\n    async dispatch => {\r\n        dispatch(changePreloaderAC(true))\r\n        const res = await profileAPI.updateProfileStatus(status)\r\n        if (res.data.resultCode === 0) dispatch(setStatusAC(status))\r\n        dispatch(changePreloaderAC(false))\r\n    }\r\nexport const updatePhotosTC = (photo: File): AppThunk => async dispatch => {\r\n    dispatch(changePreloaderAC(true))\r\n    try {\r\n        const res = await profileAPI.updateProfilePhoto(photo)\r\n        dispatch(updatePhotosAC(res.data.data))\r\n    } catch (e) {\r\n        errorResponse(e)\r\n    }\r\n    dispatch(changePreloaderAC(false))\r\n}\r\n\r\nexport const updateProfileInfoTC = (mainData: mainDataType, contacts: contactsDataType): AppThunk => async (dispatch, getState) => {\r\n    let profileData = getState().profile.userProfilePage\r\n    profileData = {\r\n        ...profileData,\r\n        ...mainData,\r\n        contacts: {\r\n            ...profileData.contacts,\r\n            ...contacts\r\n        }\r\n    }\r\n    // debugger\r\n    profileData.lookingForAJobDescription = 'aaa'\r\n    try {\r\n        const res = await profileAPI.updateProfileInfo(profileData)\r\n        if (res.resultCode === 1) {\r\n            alert(res.messages[0])\r\n        }else {\r\n            dispatch(setProfileUserDataAC(profileData))\r\n        }\r\n    } catch (e) {\r\n        errorResponse(e)\r\n    }\r\n    dispatch(changePreloaderAC(false))\r\n}\r\n\r\n//type\r\ntype initialStateType = typeof initialState\r\nexport type ProfileActionType = ReturnType<typeof setNewPostClickAC>\r\n    | ReturnType<typeof setProfileUserDataAC>\r\n    | preloaderACType\r\n    | ReturnType<typeof setStatusAC>\r\n    | ReturnType<typeof updatePhotosAC>\r\ntype mainDataType = {\r\n    fullName: string\r\n    aboutMe: string | null\r\n}\r\ntype contactsDataType = {\r\n    vk: string | null\r\n    twitter: string | null\r\n    facebook: string | null\r\n    website: string | null\r\n    instagram: string | null\r\n    github: string | null\r\n}","import React from 'react';\r\nimport {Link, NavLink} from 'react-router-dom';\r\nimport s from './Navbar.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../redux/store';\r\nimport {SiActigraph, SiMessenger} from 'react-icons/si'\r\nimport {TiBusinessCard} from 'react-icons/ti';\r\nimport {GiThreeFriends} from 'react-icons/gi';\r\nimport {logOutTC} from '../../redux/reducer/authReducer';\r\n\r\nexport const Navbar = () => {\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n    const dispatch = useDispatch()\r\n    const logOutHandler = () => {\r\n        dispatch(logOutTC())\r\n    }\r\n    return (\r\n        <nav className={s.navbar}>\r\n            <NavLink exact to=\"/\" activeClassName={s.active}><TiBusinessCard/><span>My profile</span></NavLink>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.active}><SiMessenger/><span>Message</span></NavLink>\r\n            <NavLink to=\"/friends\" activeClassName={s.active}><GiThreeFriends/><span>Friends</span></NavLink>\r\n            <NavLink to=\"/users\" activeClassName={s.active}><SiActigraph/><span>Users</span></NavLink>\r\n            {isAuth &&\r\n                <button onClick={logOutHandler}>Log Out<Link style={{display: 'none'}} to={''}/></button>}\r\n        </nav>\r\n    )\r\n}","import React, {ChangeEvent, useState} from 'react';\r\n\r\ntype ProfileStatusType = {\r\n    value: string\r\n    updateStatusTC: (status: string) => void\r\n}\r\n\r\nexport const ProfileStatus: React.FC<ProfileStatusType> = React.memo((\r\n    {\r\n        value,\r\n        updateStatusTC,\r\n    }) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(value)\r\n    const onBlurHandler = () => {\r\n        updateStatusTC(status)\r\n        setEditMode(false)\r\n    }\r\n    const onDoubleClickHandler = () => setEditMode(true)\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => setStatus(e.currentTarget.value)\r\n    return <div>\r\n        {editMode\r\n            ? <div>\r\n                <input value={status} autoFocus onBlur={onBlurHandler} onChange={onChangeHandler}/>\r\n            </div>\r\n            : <span style={{fontSize:16, wordBreak: 'break-word'}} onDoubleClick={onDoubleClickHandler}>{value || 'NO STATUS'}</span>}\r\n    </div>\r\n})","import {instance} from './apiConfig/apiConfig';\r\n\r\nexport const profileAPI = {\r\n    getProfileUserData(userId: string) {\r\n        return instance.get<ProfileDataType>(`profile/` + userId)\r\n    },\r\n    getProfileStatus(userId: string) {\r\n        return instance.get<string>('profile/status/' + userId)\r\n    },\r\n    updateProfileStatus(status: string) {\r\n        return instance.put<ResponseType>('profile/status', {status})\r\n    },\r\n    updateProfilePhoto(photo: File) {\r\n        let form = new FormData()\r\n        form.append('image', photo)\r\n        return instance.put<ResponseType<{ small: string, large: string }>>('profile/photo', form, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    updateProfileInfo(data: ProfileDataType) {\r\n        return instance.put('profile', data).then(res => res.data)\r\n    },\r\n}\r\n\r\n\r\n//type\r\ntype ResponseType<D = {}> = {\r\n    resultCode: number\r\n    messages: Array<string>\r\n    fieldsErrors: Array<string>\r\n    data: D\r\n}\r\n\r\nexport type ProfileDataType = {\r\n    aboutMe: string | null\r\n    contacts: {\r\n        facebook: string | null\r\n        website: string | null\r\n        vk: string | null\r\n        twitter: string | null\r\n        instagram: string | null\r\n        youtube: string | null\r\n        github: string | null\r\n        mainLink: string | null\r\n    }\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string | null\r\n    fullName: string\r\n    userId: number\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\nexport type updateProfileInfoType = {\r\n    contacts: {\r\n        facebook: string | null\r\n        website: string | null\r\n        vk: string | null\r\n        twitter: string | null\r\n        instagram: string | null\r\n        youtube: string | null\r\n        github: string | null\r\n        mainLink: string | null\r\n    }\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string | null\r\n    fullName: string\r\n    userId: number\r\n}","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../../redux/store';\r\nimport {ProfileDataType} from '../../../../api/profileApi';\r\nimport s from './Contacts.module.css'\r\n\r\ntype ContactsPropsType = {\r\n    hide: boolean\r\n    setHide: (hide: boolean) => void\r\n}\r\n\r\nexport const Contacts: React.FC<ContactsPropsType> = ({hide, setHide}) => {\r\n    const profileUserData = useSelector<AppRootStateType, ProfileDataType>(state => state.profile.userProfilePage)\r\n    return <div className={s.mainContainer}>\r\n        <div className={s.buttonContainer}>\r\n            <button\r\n                className={s.button}\r\n                onClick={() => setHide(!hide)}>\r\n                Изменить данные\r\n            </button>\r\n        </div>\r\n        <div><b>About me</b>:{' '}{profileUserData.aboutMe ? profileUserData.aboutMe : 'no info'}</div>\r\n        {profileUserData.contacts &&\r\n            <div className={s.infoContainer}>\r\n                <div>\r\n                    <p><b>GitHub</b>:{' '}{profileUserData.contacts.github ? profileUserData.contacts.github : 'soon'}</p>\r\n                    <p><b>VK</b>:{' '}{profileUserData.contacts.vk ? profileUserData.contacts.vk : 'soon'}</p>\r\n                    <p><b>Instagram</b>:{' '}{profileUserData.contacts.instagram ? profileUserData.contacts.instagram : 'soon'}</p>\r\n                </div>\r\n                <div>\r\n                    <p><b>Website</b>:{' '}{profileUserData.contacts.website ? profileUserData.contacts.website : 'soon'}</p>\r\n                    <p><b>Facebook</b>:{' '}{profileUserData.contacts.facebook ? profileUserData.contacts.facebook : 'soon'}</p>\r\n                    <p><b>Twitter</b>:{' '}{profileUserData.contacts.twitter ? profileUserData.contacts.twitter : 'soon'}</p>\r\n                </div>\r\n            </div>\r\n        }\r\n    </div>\r\n}","import React from 'react';\r\nimport s from './Settings.module.css'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../../redux/store';\r\nimport {ProfileDataType} from '../../../../api/profileApi';\r\nimport {useFormik} from 'formik';\r\nimport {updateProfileInfoTC} from '../../../../redux/reducer/profilePageReducer';\r\n\r\ntype SettingsPropsType = {\r\n    setHide: (hide: boolean) => void\r\n}\r\n\r\nexport const Settings: React.FC<SettingsPropsType> = ({setHide}) => {\r\n    const profile = useSelector<AppRootStateType, ProfileDataType>(state => state.profile.userProfilePage)\r\n    const dispatch = useDispatch()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            fullName: profile.fullName,\r\n            aboutMe: profile.aboutMe,\r\n            vk: profile.contacts.vk,\r\n            twitter: profile.contacts.twitter,\r\n            facebook: profile.contacts.facebook,\r\n            website: profile.contacts.website,\r\n            instagram: profile.contacts.instagram,\r\n            github: profile.contacts.github,\r\n        },\r\n        onSubmit: (values) => {\r\n            const {fullName, aboutMe} = values\r\n            const {vk, twitter, facebook, website, instagram, github} = values\r\n            const contacts = {vk, twitter, facebook, website, instagram, github}\r\n            const mainData = {fullName, aboutMe}\r\n            dispatch(updateProfileInfoTC(mainData, contacts))\r\n            setHide(false)\r\n        },\r\n    })\r\n    return (\r\n        <form className={s.mainContainer} onSubmit={formik.handleSubmit}>\r\n            <div className={s.id}>Мой id:{profile.userId}</div>\r\n            <div className={s.settings}>\r\n                <div>Сменить имя на:\r\n                    <input id=\"fullName\"\r\n                           type=\"text\"\r\n                           placeholder=\"fullName\"\r\n                           {...formik.getFieldProps('fullName')}/>\r\n                </div>\r\n                <div>Обо мне:\r\n                    <textarea id=\"aboutMe\"\r\n                              placeholder=\"aboutMe\"\r\n                              {...formik.getFieldProps('aboutMe')}/>\r\n                </div>\r\n                <div>Сменить адрес VK на:\r\n                    <input id=\"vk\"\r\n                           type=\"text\"\r\n                           placeholder=\"VK\"\r\n                           {...formik.getFieldProps('vk')}/>\r\n                </div>\r\n                <div>Сменить адрес twitter на:\r\n                    <input id=\"twitter\"\r\n                           type=\"text\"\r\n                           placeholder=\"twitter\"\r\n                           {...formik.getFieldProps('twitter')}/>\r\n                </div>\r\n                <div>Сменить адрес facebook на:\r\n                    <input id=\"facebook\"\r\n                           type=\"text\"\r\n                           placeholder=\"facebook\"\r\n                           {...formik.getFieldProps('facebook')}/>\r\n                </div>\r\n                <div>Сменить адрес своего сайта на:\r\n                    <input id=\"website\"\r\n                           type=\"text\"\r\n                           placeholder=\"website\"\r\n                           {...formik.getFieldProps('website')}/>\r\n                </div>\r\n                <div>Сменить адрес instagram на:\r\n                    <input id=\"instagram\"\r\n                           type=\"text\"\r\n                           placeholder=\"instagram\"\r\n                           {...formik.getFieldProps('instagram')}/>\r\n                </div>\r\n                <div>Сменить адрес github на:\r\n                    <input id=\"github\"\r\n                           type=\"text\"\r\n                           placeholder=\"github\"\r\n                           {...formik.getFieldProps('github')}/>\r\n                </div>\r\n            </div>\r\n            <button className={s.button} type={'submit'}>Сохранить</button>\r\n        </form>\r\n    )\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport {ProfileStatus} from './ProfileStatus/ProfileStatus';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../redux/store';\r\nimport {ProfileDataType} from '../../../api/profileApi';\r\nimport {updatePhotosTC} from '../../../redux/reducer/profilePageReducer';\r\nimport s from './ProfileInfo.module.css'\r\nimport {Contacts} from './Contacts/Contacts';\r\nimport {Settings} from './Settings/Settings';\r\n\r\n\r\ntype PropsType = {\r\n    profileUserData: ProfileDataType\r\n    status: string\r\n    updateStatusTC: (status: string) => void\r\n}\r\nexport const ProfileInfo: React.FC<PropsType> = React.memo((\r\n    {\r\n        profileUserData,\r\n        status,\r\n        updateStatusTC,\r\n    }) => {\r\n\r\n    const [hide, setHide] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const ownerPage = useSelector<AppRootStateType, number | undefined>(state => state.profile.userProfilePage?.userId)\r\n    const owner = useSelector<AppRootStateType, number>(state => state.login.id)\r\n    const savePhotoHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files) {\r\n            dispatch(updatePhotosTC(e.target.files[0]))\r\n        }\r\n        return\r\n    }\r\n    return (\r\n        <div className={s.mainContainer}>\r\n            <div className={s.profileImgContainer}>\r\n                <img\r\n                    src={profileUserData.photos?.small ? profileUserData.photos.large : 'https://i.pinimg.com/736x/75/24/87/752487a0b94808fe215c2dbf3f3f18b7.jpg'}\r\n                    alt=\"изображение того, чего нету\"/>\r\n                <div className={s.nameContainer}>\r\n                    <p><b>{profileUserData.fullName}</b></p>\r\n                    <ProfileStatus\r\n                        value={status}\r\n                        updateStatusTC={updateStatusTC}/>\r\n                    {ownerPage === owner && <>\r\n                        <input\r\n                            name=\"file\"\r\n                            id=\"file-type\"\r\n                            type=\"file\"\r\n                            onChange={savePhotoHandler}\r\n                            style={{display: 'none'}}/>\r\n                        <label className={s.fileInput} htmlFor=\"file-type\">Изменить аватарку</label>\r\n                    </>}\r\n                </div>\r\n            </div>\r\n            <Contacts hide={hide} setHide={setHide}/>\r\n            {hide && ownerPage === owner && <Settings setHide={setHide}/>}\r\n        </div>\r\n    )\r\n})","import s from './Post.module.css';\r\nimport React from 'react';\r\n\r\ntype propsType = {\r\n    message: string\r\n    likeCount: number\r\n    photo: string\r\n}\r\n\r\nexport const Post: React.FC<propsType> = React.memo(({message, likeCount, photo}) => {\r\n    return (\r\n        <div className={s.mainContainer}>\r\n            <img\r\n                src={photo ? photo : 'https://sun1-17.userapi.com/s/v1/if1/pvTi5V3csQH8-oqUnfesELwgtLWyEePqE6Hz5SdqoVZxItBnm_XwfAiDMfANJPjpj7jtW_O5.jpg?size=200x200&quality=96&crop=0,0,979,979&ava=1'}\r\n                alt=\"pikabu\"/>\r\n            <div>\r\n                <div>{message}</div>\r\n                <div>\r\n                    <span>like: {likeCount}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from 'react';\r\nimport s from './MyPost.module.css'\r\nimport {MyPostsType} from './MyPostsConteiner';\r\nimport {Post} from './Post/Post';\r\nimport {useFormik} from 'formik';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../redux/store';\r\n\r\ntype valuesType = {\r\n    messages: string,\r\n}\r\nexport const MyPosts: React.FC<MyPostsType> =\r\n    React.memo(({\r\n                    postsData,\r\n                    setNewPostClickAC\r\n                }) => {\r\n        const photo = useSelector<AppRootStateType, string>(state => state.profile.userProfilePage.photos.small)\r\n        const posts = postsData.map(p => <Post photo={photo} key={p.id} message={p.message} likeCount={p.likeCount}/>)\r\n        const formik = useFormik({\r\n            initialValues: {\r\n                messages: '',\r\n            },\r\n            onSubmit: (values: valuesType) => {\r\n                setNewPostClickAC(values.messages)\r\n                formik.resetForm()\r\n            },\r\n        })\r\n        return (\r\n            <div className={s.mainContainer}>\r\n                <div className={s.newPostContainer}>\r\n                    <span>My posts</span>\r\n                    <form onSubmit={formik.handleSubmit} className={s.formContainer}>\r\n                    <textarea\r\n                        rows={5}\r\n                        name=\"messages\"\r\n                        id=\"messages\"\r\n                        placeholder=\"write\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.messages}\r\n                    />\r\n                        <button type={'submit'}>Add new post</button>\r\n                    </form>\r\n                </div>\r\n                <div className={s.posts}>\r\n                    {posts}\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n","import {AppRootStateType} from '../../../redux/store';\r\nimport {MyPosts} from './MyPosts';\r\nimport {connect} from 'react-redux';\r\nimport {setNewPostClickAC} from '../../../redux/reducer/profilePageReducer';\r\n\r\ntype MapStateToPropsType = {\r\n    postsData: PostDataType[]\r\n}\r\ntype MapDispatchToPropsType = {\r\n    setNewPostClickAC: (e: string) => void\r\n}\r\nexport type MyPostsType = MapStateToPropsType & MapDispatchToPropsType\r\nconst mapStateToProps = (state: AppRootStateType): MapStateToPropsType => {\r\n    return {\r\n        postsData: state.profile.postsData,\r\n    }\r\n}\r\nexport const MyPostsContainer = connect(mapStateToProps,\r\n    {setNewPostClickAC}\r\n)(MyPosts)\r\n\r\nexport type PostDataType = {\r\n    id: string\r\n    message: string\r\n    likeCount: number\r\n}","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo';\r\nimport {MyPostsContainer} from './MyPosts/MyPostsConteiner';\r\nimport {ProfileDataType} from '../../api/profileApi';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../redux/store';\r\n\r\n\r\ntype PropsType = {\r\n    profileUserData: ProfileDataType\r\n    status: string\r\n    updateStatusTC: (status: string) => void\r\n}\r\nexport const Profile: React.FC<PropsType> = React.memo((\r\n    {\r\n        profileUserData,\r\n        status,\r\n        updateStatusTC,\r\n    }) => {\r\n    const ownerPage = useSelector<AppRootStateType, number | undefined>(state => state.profile.userProfilePage?.userId)\r\n    const owner = useSelector<AppRootStateType, number>(state => state.login.id)\r\n    return (\r\n        <div className={s.mainContainer}>\r\n            <ProfileInfo\r\n                profileUserData={profileUserData}\r\n                status={status}\r\n                updateStatusTC={updateStatusTC}/>\r\n            {ownerPage === owner && <MyPostsContainer/>}\r\n        </div>\r\n    )\r\n})","import preloaderImg from '../../assets/img/preloader.gif';\r\nimport React from 'react';\r\n\r\nexport const Preloader = () => {\r\n    return <img src={preloaderImg}\r\n                style={{width: 100}}\r\n                alt=\"изображение не загрузилось(((\"/>\r\n}","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppRootStateType} from \"../redux/store\";\r\n\r\ntype mstpType = {\r\n    isAuth: boolean\r\n}\r\nconst mstp = (state: AppRootStateType): mstpType => {\r\n    return {\r\n        isAuth: state.login.isAuth,\r\n    }\r\n}\r\n\r\nexport function WithAuthRedirect<T>(Component: React.ComponentType<T>) {\r\n    const RedirectComponent = (props: mstpType) => {\r\n        const {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to='/login'/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n    const connectRedirectComponent = connect(mstp)(RedirectComponent)\r\n    return connectRedirectComponent\r\n}","import {AppThunk} from '../store';\r\nimport {setAuthDataTC} from './authReducer';\r\nimport {errorResponse} from '../../utils/util-error';\r\n\r\nexport enum EnumAppActionType {\r\n    initializedSuccess = 'APP/INITIALIZED-SUCCESS'\r\n}\r\n\r\nconst initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport const AppReducer = (state: InitialStateType = initialState, action: AppReducerActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case EnumAppActionType.initializedSuccess:\r\n            return {...state, initialized: true}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n//action\r\nexport const initializedSuccess = () => {\r\n    return {type: EnumAppActionType.initializedSuccess}\r\n}\r\n\r\n// thunk\r\nexport const initializeTC = (): AppThunk => async dispatch => {\r\n    try {\r\n        await dispatch(setAuthDataTC())\r\n        dispatch(initializedSuccess())\r\n    } catch (e) {\r\n        errorResponse(e)\r\n    }\r\n}\r\n\r\n//type\r\ntype InitialStateType = typeof initialState\r\nexport type AppReducerActionType = ReturnType<typeof initializedSuccess>","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Profile} from './Profile';\r\nimport {Preloader} from '../../common/Preloader/Preloader';\r\nimport {AppRootStateType} from '../../redux/store';\r\nimport {\r\n    getStatusTC,\r\n    setProfileUserDataTC,\r\n    updateStatusTC,\r\n} from '../../redux/reducer/profilePageReducer';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\nimport {WithAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {ProfileDataType} from '../../api/profileApi';\r\n\r\nclass ProfileContainer extends React.PureComponent<PropsType> {\r\n    componentDidMount() {\r\n        this.props.setProfileUserDataTC(this.props)\r\n        this.props.getStatusTC(this.props)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.preloader && <Preloader/>}\r\n            <Profile\r\n                profileUserData={this.props.userProfilePage}\r\n                status={this.props.status}\r\n                updateStatusTC={this.props.updateStatusTC}/>\r\n        </>\r\n    }\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string,\r\n}\r\ntype MapStateToPropsType = {\r\n    preloader: boolean\r\n    userProfilePage: ProfileDataType\r\n    status: string\r\n}\r\ntype MapDispatchToPropsType = {\r\n    setProfileUserDataTC: (param: any) => void\r\n    getStatusTC: (param: any) => void\r\n    updateStatusTC: (status: string) => void\r\n}\r\nexport type ProfilePropsType = MapStateToPropsType & MapDispatchToPropsType\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfilePropsType\r\n\r\nconst mapStateToProps = (state: AppRootStateType) => {\r\n    return {\r\n        preloader: state.userPage.preloader,\r\n        userProfilePage: state.profile.userProfilePage,\r\n        status: state.profile.status\r\n    }\r\n}\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps,\r\n        {\r\n            setProfileUserDataTC, getStatusTC,\r\n            updateStatusTC,\r\n        }),\r\n    withRouter,\r\n    WithAuthRedirect,\r\n)(ProfileContainer)","import React from 'react';\r\nimport {logInTC} from '../../redux/reducer/authReducer';\r\nimport {connect, useDispatch} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppRootStateType} from '../../redux/store';\r\nimport {useFormik} from 'formik';\r\nimport s from './Login.module.css'\r\n\r\n\r\ntype LoginType = {\r\n    ThunkLogIn: (email: string, password: string, rememberMe: boolean) => void\r\n    isAuth: boolean\r\n}\r\n\r\ntype valuesType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean\r\n}\r\nconst Login: React.FC<LoginType> = React.memo(({ThunkLogIn, isAuth}) => {\r\n    const dispatch = useDispatch()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (values.password.length < 3) errors.password = 'The password is too short'\r\n            return errors;\r\n        },\r\n        onSubmit: (values: valuesType) => {\r\n            dispatch(ThunkLogIn(values.email, values.password, values.rememberMe))\r\n        },\r\n    })\r\n    if (isAuth) return <Redirect to=\"/profile\"/>\r\n    return <div className={s.allContainer}>\r\n        <span>Log In</span>\r\n        <div>\r\n            <p>To log in get registered\r\n                <a href={'https://social-network.samuraijs.com/'}\r\n                   target={'_blank'}> here\r\n                </a>\r\n            </p>\r\n            <p>or use common test account credentials:</p>\r\n            <p>Email: free@samuraijs.com</p>\r\n            <p>Password: free</p>\r\n        </div>\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <input id={'email'}\r\n                   type={'email'}\r\n                   placeholder={'email'}\r\n                   {...formik.getFieldProps('email')}/>\r\n            {formik.touched.email && formik.errors.email &&\r\n                <div style={{color: 'red'}}>{formik.errors.email}</div>}<br/>\r\n            <input id={'password'}\r\n                   type={'password'}\r\n                   placeholder={'password'}\r\n                   {...formik.getFieldProps('password')}/>\r\n            {formik.touched.password && formik.errors.password &&\r\n                <div style={{color: 'red'}}>{formik.errors.password}</div>}<br/>\r\n            <input id={'check'}\r\n                   type={'checkbox'}\r\n                   checked={formik.values.rememberMe}\r\n                   {...formik.getFieldProps('rememberMe')}\r\n            /> Remember Me<br/>\r\n            <button type={'submit'}>Log In</button>\r\n        </form>\r\n    </div>\r\n})\r\n\r\n\r\n//----------------------------------------connect\r\nconst pstp = (state: AppRootStateType) => {\r\n    return {\r\n        isAuth: state.login.isAuth\r\n    }\r\n}\r\nexport default connect(pstp, {ThunkLogIn: logInTC})(Login)\r\n\r\n//type\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n","import {AppThunk} from '../store';\r\nimport {changePreloaderAC, enumCommonActionType, preloaderACType} from '../../common/commonReducer';\r\nimport {usersAPI, UserType} from '../../api/userApi';\r\nimport {errorResponse} from '../../utils/util-error';\r\n\r\nexport enum enumUsersPageActionType {\r\n    subscribe = 'USERSPAGE/SUBSCRIBE',\r\n    unSubscribe = 'USERSPAGE/UNSUBSCRIBE',\r\n    setUsers = 'USERSPAGE/SET-USERS',\r\n    setTotalUsersCount = 'USERSPAGE/SET-TOTAL-USERS-COUNT',\r\n    changeCurrentPage = 'USERSPAGE/CHANGE-CURRENT-PAGE',\r\n    toggleFollowingInProgress = 'USERSPAGE/TOGGLE-FOLLOWING-IN-PROGRESS',\r\n}\r\n\r\nconst initialState = {\r\n    users: [] as UserType[],\r\n    pageSize: 20,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    preloader: false,\r\n    followingInProgress: [] as Array<null | string>,\r\n}\r\n\r\nexport const usersPageReducer = (state: initialStateType = initialState, action: UserPageActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case enumUsersPageActionType.subscribe:\r\n            return {\r\n                ...state, users: state.users.map(t => t.id === action.payload.id\r\n                    ? {...t, followed: true} : {...t})\r\n            }\r\n        case enumUsersPageActionType.unSubscribe:\r\n            return {\r\n                ...state, users: state.users.map(t => t.id === action.payload.id\r\n                    ? {...t, followed: false} : {...t})\r\n            }\r\n        case enumUsersPageActionType.setUsers:\r\n        case enumUsersPageActionType.setTotalUsersCount:\r\n        case enumUsersPageActionType.changeCurrentPage:\r\n        case enumCommonActionType.changePreloader:\r\n            return {...state, ...action.payload}\r\n        case enumUsersPageActionType.toggleFollowingInProgress:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.payload.isFetching ?\r\n                    [...state.followingInProgress, action.payload.userId]\r\n                    : state.followingInProgress.filter(t =>\r\n                        t !== action.payload.userId)\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n//action\r\nexport const subscribeAC = (id: string) => {\r\n    return {\r\n        type: enumUsersPageActionType.subscribe, payload: {id},\r\n    } as const\r\n}\r\nexport const unSubscribeAC = (id: string) => {\r\n    return {\r\n        type: enumUsersPageActionType.unSubscribe, payload: {id},\r\n    } as const\r\n}\r\nexport const setUsersAC = (users: Array<UserType>) => {\r\n    return {\r\n        type: enumUsersPageActionType.setUsers, payload: {users}\r\n    } as const\r\n}\r\nexport const setTotalUsersCountAC = (totalUsersCount: number) => {\r\n    return {\r\n        type: enumUsersPageActionType.setTotalUsersCount, payload: {totalUsersCount},\r\n    } as const\r\n}\r\nexport const changeCurrentPageAC = (currentPage: number) => {\r\n    return {\r\n        type: enumUsersPageActionType.changeCurrentPage, payload: {currentPage}\r\n    } as const\r\n}\r\nexport const toggleFollowingInProgressAC = (isFetching: boolean, userId: string) => {\r\n    return {\r\n        type: enumUsersPageActionType.toggleFollowingInProgress, payload: {\r\n            isFetching,\r\n            userId\r\n        }\r\n    } as const\r\n}\r\n\r\n\r\n//thunk\r\nexport const setUsersTC = (count: number = 10, friend: boolean = false, term: string = ''): AppThunk =>\r\n    async (dispatch, getState) => {\r\n        dispatch(changePreloaderAC(true))\r\n        const page = getState().userPage.currentPage\r\n        dispatch(changePreloaderAC(true))\r\n        try {\r\n            const res = await usersAPI.setUsers(page, count, term)\r\n            dispatch(setUsersAC(res.data.items))\r\n            dispatch(setTotalUsersCountAC(res.data.totalCount))\r\n        } catch (e) {\r\n            errorResponse(e)\r\n        }\r\n        dispatch(changePreloaderAC(false))\r\n    }\r\nexport const setFriendsTC = (): AppThunk =>\r\n    async dispatch => {\r\n        dispatch(changePreloaderAC(true))\r\n        try {\r\n            const res = await usersAPI.setFriends()\r\n            dispatch(setUsersAC(res.data.items))\r\n            dispatch(setTotalUsersCountAC(res.data.totalCount))\r\n        } catch (e) {\r\n            errorResponse(e)\r\n        }\r\n        dispatch(changePreloaderAC(false))\r\n    }\r\nexport const unSubscribeTC = (id: string): AppThunk => async dispatch => {\r\n    dispatch(changePreloaderAC(true))\r\n    dispatch(toggleFollowingInProgressAC(true, id))\r\n    try {\r\n        const res = await usersAPI.unSubscribeAPI(id)\r\n        if (res.data.resultCode === 0) dispatch(unSubscribeAC(id))\r\n    } catch (e) {\r\n        errorResponse(e)\r\n    }\r\n    dispatch(toggleFollowingInProgressAC(false, id))\r\n    dispatch(changePreloaderAC(false))\r\n}\r\nexport const subscribeTC = (id: string): AppThunk => async dispatch => {\r\n    dispatch(changePreloaderAC(true))\r\n    dispatch(toggleFollowingInProgressAC(true, id))\r\n    try {\r\n        const res = await usersAPI.subscribe(id)\r\n        if (res.data.resultCode === 0) dispatch(subscribeAC(id))\r\n    } catch (e) {\r\n        errorResponse(e)\r\n    }\r\n    dispatch(toggleFollowingInProgressAC(false, id))\r\n    dispatch(changePreloaderAC(false))\r\n}\r\n\r\n//type\r\ntype initialStateType = typeof initialState\r\nexport type UserPageActionType = ReturnType<typeof subscribeAC>\r\n    | ReturnType<typeof unSubscribeAC>\r\n    | ReturnType<typeof setUsersAC>\r\n    | ReturnType<typeof setTotalUsersCountAC>\r\n    | ReturnType<typeof changeCurrentPageAC>\r\n    | preloaderACType\r\n    | ReturnType<typeof toggleFollowingInProgressAC>\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\n\r\n\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <header className={s.header}>\r\n            <span>Social Network</span>\r\n        </header>\r\n    )\r\n}","import {instance} from './apiConfig/apiConfig';\r\n\r\nexport const usersAPI = {\r\n    unSubscribeAPI(id: string) {\r\n        return instance.delete<ResponseType>('follow/' + id)\r\n    },\r\n    subscribe(id: string) {\r\n        return instance.post<ResponseType>('follow/' + id)\r\n    },\r\n    setUsers(page: number, count: number, term: string = '') {\r\n        const par = {page, count, term}\r\n        return instance.get<ResponseGetUsersType>\r\n        ('users', {params: par})\r\n    },\r\n    setFriends() {\r\n        const par = {page: 1, count: 100, friend: true}\r\n        return instance.get<ResponseGetUsersType>\r\n        ('users', {params: par})\r\n    }\r\n}\r\n\r\ntype ResponseType<D = {}> = {\r\n    resultCode: number\r\n    messages: Array<string>\r\n    fieldsErrors: Array<string>\r\n    data: D\r\n}\r\nexport type ResponseGetUsersType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n}\r\nexport type UserType = {\r\n    name: string\r\n    id: string\r\n    uniqueUrlName: string | null\r\n    photos: {\r\n        small: string | null\r\n        large: string | null\r\n    }\r\n    status: string | null\r\n    followed: boolean\r\n}","export enum enumMessagesActionType {\r\n}\r\n\r\nconst initialState = {\r\n    messagesData: [\r\n        {message: 'Встреча в субботу ещё в силе?', time: '29/04/22 16:52'},\r\n        {message: 'Добрый день! Вы ещё продаете шоги?', time: '28/04/22 17:52'},\r\n        {message: 'Привет! Давно не виделись, как дела?', time: '27/04/22 18:52'},\r\n        {message: 'Вот офер на 3000$, хотите быть у нас джуном?', time: '26/04/22 19:52'},\r\n        {message: 'Тебя точно возьмут на работу!', time: '25/04/22 21:52'},\r\n        {message: 'Какая классная соц сеть у тебя получилась!', time: '24/04/22 20:52'},\r\n\r\n    ],\r\n}\r\nexport const messagesPageReducer = (state: initialStateType = initialState, action: MessageActionType): initialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//action\r\n\r\n//type\r\nexport type MessagesPageType = {\r\n    dialogsData: DialogsDataProps[]\r\n    messagesData: MessagesDataProps[]\r\n}\r\nexport type DialogsDataProps = {\r\n    id: string\r\n    name: string\r\n    img: string\r\n}\r\nexport type MessagesDataProps = {\r\n    id: string\r\n    message: string\r\n}\r\n\r\n\r\n//type\r\ntype initialStateType = typeof initialState\r\nexport type MessageActionType = any","import {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../redux/store';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport React, {useEffect} from 'react';\r\nimport {UserType} from '../../api/userApi';\r\nimport {setFriendsTC, subscribeTC, unSubscribeTC} from '../../redux/reducer/usersPageReducer';\r\nimport s from './Friends.module.css'\r\n\r\nexport const Friends = () => {\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n    const users = useSelector<AppRootStateType, UserType[]>(state => state.userPage.users)\r\n    const dispatch = useDispatch()\r\n    const onClickUnSubHandler = (id: string) => {\r\n        dispatch(unSubscribeTC(id))\r\n    }\r\n    const onClickSubHandler = (id: string) => {\r\n        dispatch(subscribeTC(id))\r\n    }\r\n    useEffect(() => {\r\n        dispatch(setFriendsTC())\r\n    }, [])\r\n    if (!isAuth) return <Redirect to=\"/login\"/>\r\n    return <div className={s.mainContainer}>\r\n        {users.map(t => {\r\n            return (\r\n                <div key={t.id} className={s.friendContainer}>\r\n                    <div className={s.imgContainer}>\r\n                        <NavLink to={'/profile/' + t.id}>\r\n                            <img\r\n                                src={t.photos.small === null\r\n                                    ? 'https://sun1-17.userapi.com/s/v1/if1/pvTi5V3csQH8-oqUnfesELwgtLWyEePqE6Hz5SdqoVZxItBnm_XwfAiDMfANJPjpj7jtW_O5.jpg?size=200x200&quality=96&crop=0,0,979,979&ava=1'\r\n                                    : t.photos.small} alt=\"аватарка пользователей\"\r\n                            />\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={s.textContainer}>\r\n                        <span style={{wordBreak: 'break-all'}}>{t.name}</span>\r\n                        <span style={{fontSize: 16}}>\r\n                                    {t.status ? t.status : 'no status'}\r\n                                </span>\r\n                    </div>\r\n                    {t.followed ? <button\r\n\r\n                            onClick={() => onClickUnSubHandler(t.id)}>\r\n                            unfollow\r\n                        </button> :\r\n                        <button\r\n                            onClick={() => onClickSubHandler(t.id)}>follow\r\n                        </button>}\r\n                </div>\r\n            )\r\n        })}\r\n    </div>\r\n}","import React, {useEffect, useState} from 'react';\r\nimport s from './Pagination.module.css'\r\n\r\ntype PaginatorPropsType = {\r\n    totalCount: number\r\n    pageCount: number\r\n    callback: (page: number) => void\r\n}\r\n\r\nexport const Paginator: React.FC<PaginatorPropsType> =\r\n    React.memo(({\r\n                    totalCount,\r\n                    pageCount,\r\n                    callback,\r\n                }) => {\r\n        const [curPage, setCurPage] = useState(1)\r\n        const totalPages = Math.ceil(totalCount / pageCount)\r\n        const pages = [] as number[]\r\n\r\n        function createPages(pages: number[], pagesCount: number, currentPage: number) {\r\n            if (pagesCount > 10) {\r\n                if (currentPage > 5) {\r\n                    for (let i = currentPage - 4; i <= currentPage + 5; i++) {\r\n                        pages.push(i)\r\n                        if (i === pagesCount) break\r\n                    }\r\n                } else {\r\n                    for (let i = 1; i <= 10; i++) {\r\n                        pages.push(i)\r\n                        if (i === pagesCount) break\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = 1; i <= pagesCount; i++) {\r\n                    pages.push(i)\r\n                }\r\n            }\r\n        }\r\n\r\n        createPages(pages, totalPages, curPage)\r\n\r\n        const toFirstPage = () => setCurPage(1)\r\n        const toLastPage = () => setCurPage(totalPages)\r\n\r\n        const [test, setTest] = useState<null | number>(null)\r\n        useEffect(() => {\r\n            if (test) {\r\n                callback(curPage)\r\n            }\r\n            setTest(1)\r\n        }, [curPage])\r\n\r\n        return (\r\n            <div className={s.pages}>\r\n                <span onClick={toFirstPage}> {'<<'} </span>\r\n                <span onClick={() => setCurPage(curPage - 1)}>{'<'} </span>\r\n                {pages.map((page, index) => <span\r\n                    key={index}\r\n                    className={curPage === page ? s.currentPage : s.page}\r\n                    onClick={() => setCurPage(page)}>{page} </span>)}\r\n                <span onClick={() => setCurPage(curPage + 1)}> {'>'} </span>\r\n                <span onClick={toLastPage}>{'>>'} </span>\r\n            </div>\r\n        );\r\n    });","import s from './Users.module.css';\r\nimport React, {useCallback, useEffect} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Paginator} from '../../common/Paginator/Paginator';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {changeCurrentPageAC, setUsersTC, subscribeTC, unSubscribeTC} from '../../redux/reducer/usersPageReducer';\r\nimport {AppRootStateType} from '../../redux/store';\r\nimport {UserType} from '../../api/userApi';\r\n\r\nexport const Users = () => {\r\n    const users = useSelector<AppRootStateType, UserType[]>(state => state.userPage.users)\r\n    const totalUsersCount = useSelector<AppRootStateType, number>(state => state.userPage.totalUsersCount)\r\n    const page = useSelector<AppRootStateType, number>(state => state.userPage.currentPage)\r\n    const followingInProgress = useSelector<AppRootStateType, (string | null)[]>(state => state.userPage.followingInProgress)\r\n    const dispatch = useDispatch()\r\n    const onClickUnSubHandler = (id: string) => {\r\n        dispatch(unSubscribeTC(id))\r\n    }\r\n    const onClickSubHandler = (id: string) => {\r\n        dispatch(subscribeTC(id))\r\n    }\r\n    const changeCurrentPageHandler = useCallback((page: number) => {\r\n        dispatch(changeCurrentPageAC(page))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        dispatch(setUsersTC())\r\n    }, [page])\r\n\r\n    return <div className={s.container}>\r\n        <Paginator totalCount={totalUsersCount} pageCount={10} callback={changeCurrentPageHandler}\r\n        />\r\n        <div className={s.containerUsers}>\r\n            {users.map(t => {\r\n                return (\r\n                    <div className={s.containerUser} key={t.id}>\r\n                        <div className={s.imgAndName}>\r\n                            <div>\r\n                                <NavLink to={'/profile/' + t.id}>\r\n                                    <img\r\n                                        src={t.photos.small === null\r\n                                            ? 'https://sun1-17.userapi.com/s/v1/if1/pvTi5V3csQH8-oqUnfesELwgtLWyEePqE6Hz5SdqoVZxItBnm_XwfAiDMfANJPjpj7jtW_O5.jpg?size=200x200&quality=96&crop=0,0,979,979&ava=1'\r\n                                            : t.photos.small} alt=\"аватарка пользователей\"\r\n                                    />\r\n                                </NavLink>\r\n                            </div>\r\n                            <div className={s.statusAndName}>\r\n                                <span>{t.name}</span>\r\n                                <span style={{fontSize: 16}}>\r\n                                    {t.status ? t.status : 'no status'}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        {t.followed ? <button\r\n                                disabled={followingInProgress.some(id => id === t.id\r\n                                )}\r\n                                onClick={() => onClickUnSubHandler(t.id)}>\r\n                                unfollow\r\n                            </button> :\r\n                            <button\r\n                                disabled={followingInProgress.some(id => id === t.id)}\r\n                                onClick={() => onClickSubHandler(t.id)}>follow\r\n                            </button>}\r\n                    </div>\r\n\r\n                )\r\n            })}\r\n        </div>\r\n    </div>\r\n}","import React, {useEffect} from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {setFriendsTC} from '../../redux/reducer/usersPageReducer';\r\nimport {AppRootStateType} from '../../redux/store';\r\nimport {UserType} from '../../api/userApi';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\n\r\n\r\nexport const Dialogs = () => {\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n    const users = useSelector<AppRootStateType, UserType[]>(state => state.userPage.users)\r\n    let usersForDialogs: UserTypeMessage[] = users.slice(0, 6)\r\n    const messages = useSelector<AppRootStateType, { message: string, time: string }[]>(state => state.messages.messagesData)\r\n    for (let i = 0; i < 6; i++) {\r\n        usersForDialogs[i] = {...usersForDialogs[i], message: messages[i].message, time: messages[i].time}\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(setFriendsTC())\r\n    }, [])\r\n    if (!isAuth) return <Redirect to=\"/login\"/>\r\n    return (\r\n        <>\r\n            {usersForDialogs.map(t => {\r\n                return (<div className={s.mainContainer} key={t.id}>\r\n                    <div className={s.contentContainer}>\r\n                        <div className={s.imgContainer}>\r\n                            <NavLink to={'/profile/' + t.id}><img\r\n                                src={t.photos?.small ? t.photos.small : 'https://sun1-17.userapi.com/s/v1/if1/pvTi5V3csQH8-oqUnfesELwgtLWyEePqE6Hz5SdqoVZxItBnm_XwfAiDMfANJPjpj7jtW_O5.jpg?size=200x200&quality=96&crop=0,0,979,979&ava=1'}\r\n                                alt=\"Photo uf user\"/></NavLink>\r\n                            <span style={{wordBreak: 'break-all'}}>{t.name}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.textContainer}>\r\n                        <span>{t.message}</span>\r\n                        <span className={s.time}>{t.time}</span>\r\n                    </div>\r\n                </div>)\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport type UserTypeMessage = {\r\n    name: string\r\n    id: string\r\n    uniqueUrlName: string | null\r\n    photos: {\r\n        small: string | null\r\n        large: string | null\r\n    }\r\n    status: string | null\r\n    followed: boolean\r\n    message?: string | null\r\n    time?: string | null\r\n}","import React from 'react';\r\nimport s from './App.module.css';\r\nimport {Navbar} from './components/Navbar/Navbar';\r\nimport {Route, withRouter} from 'react-router-dom';\r\nimport {AppRootStateType} from './redux/store';\r\nimport ProfileContainer from './components/Profile/ProfileConteiner';\r\nimport Login from './components/Login/Login';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {initializeTC} from './redux/reducer/appReducer';\r\nimport {Preloader} from './common/Preloader/Preloader';\r\nimport {Header} from './components/Header/Header';\r\nimport {Friends} from './components/Friends/Friends';\r\nimport {Users} from './components/Users/Users';\r\nimport {Dialogs} from './components/Dialogs/Dialogs';\r\n\r\nclass App extends React.PureComponent<AppPropsType> {\r\n    componentDidMount() {\r\n        this.props.initializeTC()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) return <Preloader/>\r\n        return (\r\n            <div className={s.allContainer}>\r\n                <Header/>\r\n                <div className={s.mainContainer}>\r\n                    <Navbar/>\r\n                    <div className={s.contentContainer}>\r\n                        <Route path=\"/dialogs\" render={() => <Dialogs/>}/>\r\n                        <Route exact path=\"/\" render={() => <ProfileContainer/>}/>\r\n                        <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\r\n                        <Route path=\"/users\" render={() => <Users/>}/>\r\n                        <Route path=\"/login\" render={() => <Login/>}/>\r\n                        <Route path=\"/friends\" render={() => <Friends/>}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\ntype AppPropsType = {\r\n    initializeTC: () => void\r\n    initialized: boolean\r\n}\r\nconst mapStateToProps = (state: AppRootStateType) => {\r\n    return {\r\n        initialized: state.AppReducer.initialized,\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps, {initializeTC}), withRouter)(App);\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {MessageActionType, messagesPageReducer} from './reducer/messagesPageReducer';\r\nimport {ProfileActionType, profilePageReducer} from './reducer/profilePageReducer';\r\nimport {UserPageActionType, usersPageReducer} from './reducer/usersPageReducer';\r\nimport {authReducer, LoginActionType} from './reducer/authReducer';\r\nimport thunk, {ThunkAction} from 'redux-thunk';\r\nimport {CommonActionType, commonReducer} from '../common/commonReducer';\r\nimport {AppReducer, AppReducerActionType} from './reducer/appReducer';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    messages: messagesPageReducer,\r\n    profile: profilePageReducer,\r\n    userPage: usersPageReducer,\r\n    login: authReducer,\r\n    common: commonReducer,\r\n    AppReducer,\r\n})\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport type AppActionType =\r\n    | MessageActionType\r\n    | ProfileActionType\r\n    | CommonActionType\r\n    | LoginActionType\r\n    | UserPageActionType\r\n    | AppReducerActionType\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AppActionType>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {store} from './redux/store';\r\nimport {Provider} from 'react-redux';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter, HashRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </HashRouter>,\r\n    document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1tzDp\",\"active\":\"Navbar_active__2uMtm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Users_container__iEjx_\",\"containerUsers\":\"Users_containerUsers__gbPN0\",\"containerUser\":\"Users_containerUser__2jjAV\",\"imgAndName\":\"Users_imgAndName__3yKAQ\",\"statusAndName\":\"Users_statusAndName__Gs-zP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Dialogs_mainContainer__QlxcU\",\"contentContainer\":\"Dialogs_contentContainer__1ww0O\",\"imgContainer\":\"Dialogs_imgContainer__22Ytq\",\"timeContainer\":\"Dialogs_timeContainer__2qtEO\",\"textContainer\":\"Dialogs_textContainer__sY_FZ\",\"time\":\"Dialogs_time__1oBBZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"ProfileInfo_mainContainer__3j7O7\",\"profileImgContainer\":\"ProfileInfo_profileImgContainer__1fJQT\",\"nameContainer\":\"ProfileInfo_nameContainer__3RfvT\",\"fileInput\":\"ProfileInfo_fileInput__2L_ui\",\"button\":\"ProfileInfo_button__3uaCr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Contacts_mainContainer__oG1gv\",\"infoContainer\":\"Contacts_infoContainer__kAqOu\",\"buttonContainer\":\"Contacts_buttonContainer__HR-Cs\",\"button\":\"Contacts_button__268Sz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Settings_mainContainer__2Z2x2\",\"button\":\"Settings_button__1jPMO\",\"settings\":\"Settings_settings__2joqG\",\"id\":\"Settings_id__JRBlG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"MyPost_mainContainer__3kFTJ\",\"newPostContainer\":\"MyPost_newPostContainer__2hAHN\",\"formContainer\":\"MyPost_formContainer__23NBj\",\"posts\":\"MyPost_posts__B2XNC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Friends_mainContainer__1BJw6\",\"friendContainer\":\"Friends_friendContainer__1piQZ\",\"imgContainer\":\"Friends_imgContainer__32NKR\",\"textContainer\":\"Friends_textContainer__36F30\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allContainer\":\"App_allContainer__2DW9Q\",\"mainContainer\":\"App_mainContainer__32gD_\",\"contentContainer\":\"App_contentContainer__26wrs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages\":\"Pagination_pages__25KpY\",\"currentPage\":\"Pagination_currentPage__1WNWN\",\"page\":\"Pagination_page__X0MDs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Profile_mainContainer__1eiNj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Post_mainContainer__1o5Er\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.087f5d2f.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allContainer\":\"Login_allContainer__aSMRf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2mujF\"};"],"sourceRoot":""}